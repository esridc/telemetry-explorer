{"version":3,"names":["SLOTS","dropdownTrigger","dropdownCss","Dropdown","constructor","hostRef","this","items","groups","mutationObserver","createObserver","updateItems","resizeObserver","entries","resizeObserverCallback","openTransitionProp","guid","defaultAssignedElements","slotChangeHandler","event","target","assignedElements","flatten","setFilteredPlacements","el","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","updateTriggers","triggers","reposition","map","group","Array","from","querySelectorAll","reduce","previousValue","currentValue","updateSelectedItems","forEach","item","scale","updateGroups","filter","matches","updateGroupScale","entry","referenceEl","setDropdownWidth","scrollerEl","setMaxScrollerHeight","referenceElWidth","clientWidth","style","minWidth","maxScrollerHeight","getMaxScrollerHeight","maxHeight","setScrollerAndTransitionEl","observe","transitionEl","setReferenceEl","connectFloatingUI","floatingEl","setFloatingEl","keyDownHandler","composedPath","includes","defaultPrevented","key","open","closeCalciteDropdown","preventDefault","shiftKey","isActivationKey","openCalciteDropdown","focusOnFirstActiveOrFirstItem","getFocusableElement","getTraversableItems","find","selected","toggleOpenEnd","removeEventListener","addEventListener","closeOnSelectDisabled","disabled","undefined","maxItems","overlayPositioning","placement","defaultMenuPlacement","selectedItems","type","widthScale","openHandler","onToggleOpenCloseComponent","handleDisabledChange","value","flipPlacementsHandler","maxItemsHandler","overlayPositioningHandler","placementHandler","handlePropsChange","async","componentFocusable","focus","connectedCallback","_a","childList","subtree","connectInteractive","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnect","_b","disconnectInteractive","disconnectFloatingUI","render","h","Host","InteractiveContainer","class","id","onClick","onKeyDown","ref","toAriaBoolean","name","onSlotchange","FloatingCSS","animation","animationActive","role","delayed","closeCalciteDropdownOnClick","closeCalciteDropdownOnEvent","stopPropagation","closeCalciteDropdownOnOpenEvent","pointerEnterHandler","pointerLeaveHandler","hidden","calciteInternalDropdownItemKeyEvent","keyboardEvent","detail","traversableItems","updateTabIndexOfItems","focusElementInGroup","handleItemSelect","calciteDropdownSelect","emit","requestedDropdownGroup","selectionMode","onBeforeOpen","calciteDropdownBeforeOpen","onOpen","calciteDropdownOpen","onBeforeClose","calciteDropdownBeforeClose","onClose","calciteDropdownClose","itemsToProcess","groupHeaderHeight","children","index","isNaN","offsetTop","offsetHeight","length","focusTrigger","focusElement","tabIndex","delegatesFocus"],"sources":["./node_modules/@esri/calcite-components/dist/collection/components/dropdown/resources.js","./node_modules/@esri/calcite-components/dist/collection/components/dropdown/dropdown.css?tag=calcite-dropdown&encapsulation=shadow","./node_modules/@esri/calcite-components/dist/collection/components/dropdown/dropdown.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\nexport const SLOTS = {\n    dropdownTrigger: \"trigger\",\n};\n//# sourceMappingURL=resources.js.map\n","/**\n * Do not edit directly\n * Generated on Thu, 27 Jun 2024 13:17:24 GMT\n */\n/**\n * Do not edit directly\n * Generated on Thu, 27 Jun 2024 13:17:24 GMT\n */\n/**\n * Do not edit directly\n * Generated on Thu, 27 Jun 2024 13:17:24 GMT\n */\n/**\n * Do not edit directly\n * Generated on Thu, 27 Jun 2024 13:17:24 GMT\n */\n/**\n * Do not edit directly\n * Generated on Thu, 27 Jun 2024 13:17:22 GMT\n */\n/* mixins & extensions */\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:host([disabled]) {\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-opacity-disabled);\n}\n\n:host([disabled]) *,\n:host([disabled]) ::slotted(*) {\n  pointer-events: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-dropdown-width: Specifies the width of the component's wrapper.\n*/\n:host {\n  display: inline-block;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n.interaction-container {\n  display: contents;\n}\n\n:host .calcite-dropdown-wrapper {\n  --calcite-floating-ui-z-index: var(--calcite-z-index-dropdown);\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n  visibility: hidden;\n}\n\n.calcite-dropdown-wrapper .calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: var(--calcite-z-index);\n  border-radius: 0.25rem;\n}\n.calcite-dropdown-wrapper[data-placement^=bottom] .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n.calcite-dropdown-wrapper[data-placement^=top] .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n.calcite-dropdown-wrapper[data-placement^=left] .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n.calcite-dropdown-wrapper[data-placement^=right] .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n.calcite-dropdown-wrapper[data-placement] .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n:host([open]) .calcite-dropdown-wrapper {\n  visibility: visible;\n}\n\n:host .calcite-dropdown-content {\n  max-block-size: 45vh;\n  inline-size: auto;\n  overflow-y: auto;\n  overflow-x: hidden;\n  background-color: var(--calcite-color-foreground-1);\n  inline-size: var(--calcite-dropdown-width);\n}\n\n.calcite-trigger-container {\n  position: relative;\n  display: flex;\n  block-size: 100%;\n  flex: 1 1 auto;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n@media (forced-colors: active) {\n  /* use real border since box-shadow is removed in high contrast mode */\n  :host([open]) .calcite-dropdown-wrapper {\n    border: 1px solid canvasText;\n  }\n}\n:host([width-scale=s]) {\n  --calcite-dropdown-width: 12rem;\n}\n\n:host([width-scale=m]) {\n  --calcite-dropdown-width: 14rem;\n}\n\n:host([width-scale=l]) {\n  --calcite-dropdown-width: 16rem;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n[hidden] {\n  display: none;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\nimport { h, Host, } from \"@stencil/core\";\nimport { focusElement, focusElementInGroup, toAriaBoolean } from \"../../utils/dom\";\nimport { connectFloatingUI, defaultMenuPlacement, disconnectFloatingUI, filterValidFlipPlacements, FloatingCSS, reposition, } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { connectInteractive, disconnectInteractive, InteractiveContainer, updateHostInteraction, } from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { componentFocusable, setComponentLoaded, setUpLoadableComponent, } from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { SLOTS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-dropdown-group` elements. Every `calcite-dropdown-item` must have a parent `calcite-dropdown-group`, even if the `groupTitle` property is not set.\n * @slot trigger - A slot for the element that triggers the `calcite-dropdown`.\n */\nexport class Dropdown {\n    constructor() {\n        this.items = [];\n        this.groups = [];\n        this.mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n        this.resizeObserver = createObserver(\"resize\", (entries) => this.resizeObserverCallback(entries));\n        this.openTransitionProp = \"opacity\";\n        this.guid = `calcite-dropdown-${guid()}`;\n        this.defaultAssignedElements = [];\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this.slotChangeHandler = (event) => {\n            this.defaultAssignedElements = event.target.assignedElements({\n                flatten: true,\n            });\n            this.updateItems();\n        };\n        this.setFilteredPlacements = () => {\n            const { el, flipPlacements } = this;\n            this.filteredFlipPlacements = flipPlacements\n                ? filterValidFlipPlacements(flipPlacements, el)\n                : null;\n        };\n        this.updateTriggers = (event) => {\n            this.triggers = event.target.assignedElements({\n                flatten: true,\n            });\n            this.reposition(true);\n        };\n        this.updateItems = () => {\n            this.items = this.groups\n                .map((group) => Array.from(group?.querySelectorAll(\"calcite-dropdown-item\")))\n                .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n            this.updateSelectedItems();\n            this.reposition(true);\n            this.items.forEach((item) => (item.scale = this.scale));\n        };\n        this.updateGroups = (event) => {\n            const groups = event.target\n                .assignedElements({ flatten: true })\n                .filter((el) => el?.matches(\"calcite-dropdown-group\"));\n            this.groups = groups;\n            this.updateItems();\n            this.updateGroupScale();\n        };\n        this.resizeObserverCallback = (entries) => {\n            entries.forEach((entry) => {\n                const { target } = entry;\n                if (target === this.referenceEl) {\n                    this.setDropdownWidth();\n                }\n                else if (target === this.scrollerEl) {\n                    this.setMaxScrollerHeight();\n                }\n            });\n        };\n        this.setDropdownWidth = () => {\n            const { referenceEl, scrollerEl } = this;\n            const referenceElWidth = referenceEl?.clientWidth;\n            if (!referenceElWidth || !scrollerEl) {\n                return;\n            }\n            scrollerEl.style.minWidth = `${referenceElWidth}px`;\n        };\n        this.setMaxScrollerHeight = () => {\n            const { scrollerEl } = this;\n            if (!scrollerEl) {\n                return;\n            }\n            this.reposition(true);\n            const maxScrollerHeight = this.getMaxScrollerHeight();\n            scrollerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n            this.reposition(true);\n        };\n        this.setScrollerAndTransitionEl = (el) => {\n            this.resizeObserver.observe(el);\n            this.scrollerEl = el;\n            this.transitionEl = el;\n        };\n        this.setReferenceEl = (el) => {\n            this.referenceEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n            this.resizeObserver.observe(el);\n        };\n        this.setFloatingEl = (el) => {\n            this.floatingEl = el;\n            connectFloatingUI(this, this.referenceEl, this.floatingEl);\n        };\n        this.keyDownHandler = (event) => {\n            if (!event.composedPath().includes(this.referenceEl)) {\n                return;\n            }\n            const { defaultPrevented, key } = event;\n            if (defaultPrevented) {\n                return;\n            }\n            if (this.open) {\n                if (key === \"Escape\") {\n                    this.closeCalciteDropdown();\n                    event.preventDefault();\n                    return;\n                }\n                else if (event.shiftKey && key === \"Tab\") {\n                    this.closeCalciteDropdown();\n                    event.preventDefault();\n                    return;\n                }\n            }\n            if (isActivationKey(key)) {\n                this.openCalciteDropdown();\n                event.preventDefault();\n            }\n            else if (key === \"Escape\") {\n                this.closeCalciteDropdown();\n                event.preventDefault();\n            }\n        };\n        this.focusOnFirstActiveOrFirstItem = () => {\n            this.getFocusableElement(this.getTraversableItems().find((item) => item.selected) || this.items[0]);\n        };\n        this.toggleOpenEnd = () => {\n            this.focusOnFirstActiveOrFirstItem();\n            this.el.removeEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n        };\n        this.openCalciteDropdown = () => {\n            this.open = !this.open;\n            if (this.open) {\n                this.el.addEventListener(\"calciteDropdownOpen\", this.toggleOpenEnd);\n            }\n        };\n        this.open = false;\n        this.closeOnSelectDisabled = false;\n        this.disabled = false;\n        this.flipPlacements = undefined;\n        this.maxItems = 0;\n        this.overlayPositioning = \"absolute\";\n        this.placement = defaultMenuPlacement;\n        this.selectedItems = [];\n        this.type = \"click\";\n        this.widthScale = undefined;\n        this.scale = \"m\";\n    }\n    openHandler() {\n        onToggleOpenCloseComponent(this);\n        if (this.disabled) {\n            this.open = false;\n            return;\n        }\n        this.reposition(true);\n    }\n    handleDisabledChange(value) {\n        if (!value) {\n            this.open = false;\n        }\n    }\n    flipPlacementsHandler() {\n        this.setFilteredPlacements();\n        this.reposition(true);\n    }\n    maxItemsHandler() {\n        this.setMaxScrollerHeight();\n    }\n    overlayPositioningHandler() {\n        this.reposition(true);\n    }\n    placementHandler() {\n        this.reposition(true);\n    }\n    handlePropsChange() {\n        this.updateItems();\n        this.updateGroupScale();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Sets focus on the component's first focusable element. */\n    async setFocus() {\n        await componentFocusable(this);\n        this.el.focus();\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n        this.setFilteredPlacements();\n        if (this.open) {\n            this.openHandler();\n            onToggleOpenCloseComponent(this);\n        }\n        connectInteractive(this);\n        this.updateItems();\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    componentWillLoad() {\n        setUpLoadableComponent(this);\n    }\n    componentDidLoad() {\n        setComponentLoaded(this);\n        connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    componentDidRender() {\n        updateHostInteraction(this);\n    }\n    disconnectedCallback() {\n        this.mutationObserver?.disconnect();\n        this.resizeObserver?.disconnect();\n        disconnectInteractive(this);\n        disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    }\n    render() {\n        const { open, guid } = this;\n        return (h(Host, { key: '660d6b0944d2dc3d79357dae7b66a6d2c8f9c3a9' }, h(InteractiveContainer, { key: '1f32f4c315d77b8248c575eea7a38117bf57f1df', disabled: this.disabled }, h(\"div\", { key: '6f1658b0c35a39f8c2614cf0dd95e07d2b0c5c9a', class: \"calcite-trigger-container\", id: `${guid}-menubutton`, onClick: this.openCalciteDropdown, onKeyDown: this.keyDownHandler, ref: this.setReferenceEl }, h(\"slot\", { key: '3e97cec359dc5a14ebb285fa8d616c6f30d46b88', \"aria-controls\": `${guid}-menu`, \"aria-expanded\": toAriaBoolean(open), \"aria-haspopup\": \"menu\", name: SLOTS.dropdownTrigger, onSlotchange: this.updateTriggers })), h(\"div\", { key: 'cfc6e225664a43cb6c9bd44785999d2fc9e0ce33', \"aria-hidden\": toAriaBoolean(!open), class: \"calcite-dropdown-wrapper\", ref: this.setFloatingEl }, h(\"div\", { key: '1f27f69083e5a67a34a9824e5bd513fe500775fb', \"aria-labelledby\": `${guid}-menubutton`, class: {\n                [\"calcite-dropdown-content\"]: true,\n                [FloatingCSS.animation]: true,\n                [FloatingCSS.animationActive]: open,\n            }, id: `${guid}-menu`, ref: this.setScrollerAndTransitionEl, role: \"menu\" }, h(\"slot\", { key: '66b2dce743680e932ac668f18bcd59df0647b165', onSlotchange: this.updateGroups }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Public Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Updates the position of the component.\n     *\n     * @param delayed\n     */\n    async reposition(delayed = false) {\n        const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n        return reposition(this, {\n            floatingEl,\n            referenceEl,\n            overlayPositioning,\n            placement,\n            flipPlacements: filteredFlipPlacements,\n            type: \"menu\",\n        }, delayed);\n    }\n    closeCalciteDropdownOnClick(event) {\n        if (this.disabled || !this.open || event.composedPath().includes(this.el)) {\n            return;\n        }\n        this.closeCalciteDropdown(false);\n    }\n    closeCalciteDropdownOnEvent(event) {\n        this.closeCalciteDropdown();\n        event.stopPropagation();\n    }\n    closeCalciteDropdownOnOpenEvent(event) {\n        if (event.composedPath().includes(this.el)) {\n            return;\n        }\n        this.open = false;\n    }\n    pointerEnterHandler() {\n        if (this.disabled || this.type !== \"hover\") {\n            return;\n        }\n        this.openCalciteDropdown();\n    }\n    pointerLeaveHandler() {\n        if (this.disabled || this.type !== \"hover\") {\n            return;\n        }\n        this.closeCalciteDropdown();\n    }\n    getTraversableItems() {\n        return this.items.filter((item) => !item.disabled && !item.hidden);\n    }\n    calciteInternalDropdownItemKeyEvent(event) {\n        const { keyboardEvent } = event.detail;\n        const target = keyboardEvent.target;\n        const traversableItems = this.getTraversableItems();\n        switch (keyboardEvent.key) {\n            case \"Tab\":\n                this.open = false;\n                this.updateTabIndexOfItems(target);\n                break;\n            case \"ArrowDown\":\n                focusElementInGroup(traversableItems, target, \"next\");\n                break;\n            case \"ArrowUp\":\n                focusElementInGroup(traversableItems, target, \"previous\");\n                break;\n            case \"Home\":\n                focusElementInGroup(traversableItems, target, \"first\");\n                break;\n            case \"End\":\n                focusElementInGroup(traversableItems, target, \"last\");\n                break;\n        }\n        event.stopPropagation();\n    }\n    handleItemSelect(event) {\n        this.updateSelectedItems();\n        event.stopPropagation();\n        this.calciteDropdownSelect.emit();\n        if (!this.closeOnSelectDisabled ||\n            event.detail.requestedDropdownGroup.selectionMode === \"none\") {\n            this.closeCalciteDropdown();\n        }\n        event.stopPropagation();\n    }\n    updateGroupScale() {\n        this.groups?.forEach((group) => (group.scale = this.scale));\n    }\n    onBeforeOpen() {\n        this.calciteDropdownBeforeOpen.emit();\n    }\n    onOpen() {\n        this.calciteDropdownOpen.emit();\n    }\n    onBeforeClose() {\n        this.calciteDropdownBeforeClose.emit();\n    }\n    onClose() {\n        this.calciteDropdownClose.emit();\n    }\n    updateSelectedItems() {\n        this.selectedItems = this.items.filter((item) => item.selected);\n    }\n    getMaxScrollerHeight() {\n        const { maxItems, items } = this;\n        let itemsToProcess = 0;\n        let maxScrollerHeight = 0;\n        let groupHeaderHeight;\n        this.groups.forEach((group) => {\n            if (maxItems > 0 && itemsToProcess < maxItems) {\n                Array.from(group.children).forEach((item, index) => {\n                    if (index === 0) {\n                        if (isNaN(groupHeaderHeight)) {\n                            groupHeaderHeight = item.offsetTop;\n                        }\n                        maxScrollerHeight += groupHeaderHeight;\n                    }\n                    if (itemsToProcess < maxItems) {\n                        maxScrollerHeight += item.offsetHeight;\n                        itemsToProcess += 1;\n                    }\n                });\n            }\n        });\n        return items.length > maxItems ? maxScrollerHeight : 0;\n    }\n    closeCalciteDropdown(focusTrigger = true) {\n        this.open = false;\n        if (focusTrigger) {\n            focusElement(this.triggers[0]);\n        }\n    }\n    getFocusableElement(item) {\n        if (!item) {\n            return;\n        }\n        focusElement(item);\n    }\n    updateTabIndexOfItems(target) {\n        this.items.forEach((item) => {\n            item.tabIndex = target !== item ? -1 : 0;\n        });\n    }\n    static get is() { return \"calcite-dropdown\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"dropdown.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"dropdown.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"open\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, displays and positions the component.\"\n                },\n                \"attribute\": \"open\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"closeOnSelectDisabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, the component will remain open after a selection is made.\\n\\nIf the `selectionMode` of the selected `calcite-dropdown-item`'s containing `calcite-dropdown-group` is `\\\"none\\\"`, the component will always close.\"\n                },\n                \"attribute\": \"close-on-select-disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": true,\n                \"defaultValue\": \"false\"\n            },\n            \"flipPlacements\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FlipPlacement[]\",\n                    \"resolved\": \"FlipPlacement[]\",\n                    \"references\": {\n                        \"FlipPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::FlipPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n                }\n            },\n            \"maxItems\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the maximum number of `calcite-dropdown-item`s to display before showing a scroller.\\nValue must be greater than `0`, and does not include `groupTitle`'s from `calcite-dropdown-group`.\"\n                },\n                \"attribute\": \"max-items\",\n                \"reflect\": true,\n                \"defaultValue\": \"0\"\n            },\n            \"overlayPositioning\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"OverlayPositioning\",\n                    \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n                    \"references\": {\n                        \"OverlayPositioning\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::OverlayPositioning\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n                },\n                \"attribute\": \"overlay-positioning\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"absolute\\\"\"\n            },\n            \"placement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"MenuPlacement\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"bottom-end\\\" | \\\"bottom-start\\\" | \\\"top\\\" | \\\"top-end\\\" | \\\"top-start\\\"\",\n                    \"references\": {\n                        \"MenuPlacement\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/floating-ui\",\n                            \"id\": \"src/utils/floating-ui.ts::MenuPlacement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"default\",\n                            \"text\": \"\\\"bottom-start\\\"\"\n                        }],\n                    \"text\": \"Determines where the component will be positioned relative to the container element.\"\n                },\n                \"attribute\": \"placement\",\n                \"reflect\": true,\n                \"defaultValue\": \"defaultMenuPlacement\"\n            },\n            \"selectedItems\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"HTMLCalciteDropdownItemElement[]\",\n                    \"resolved\": \"HTMLCalciteDropdownItemElement[]\",\n                    \"references\": {\n                        \"HTMLCalciteDropdownItemElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLCalciteDropdownItemElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"readonly\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Specifies the component's selected items.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"\\\"hover\\\" | \\\"click\\\"\",\n                    \"resolved\": \"\\\"click\\\" | \\\"hover\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the action to open the component from the container element.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"click\\\"\"\n            },\n            \"widthScale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the width of the component.\"\n                },\n                \"attribute\": \"width-scale\",\n                \"reflect\": true\n            },\n            \"scale\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Scale\",\n                    \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n                    \"references\": {\n                        \"Scale\": {\n                            \"location\": \"import\",\n                            \"path\": \"../interfaces\",\n                            \"id\": \"src/components/interfaces.ts::Scale\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the size of the component.\"\n                },\n                \"attribute\": \"scale\",\n                \"reflect\": true,\n                \"defaultValue\": \"\\\"m\\\"\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"calciteDropdownSelect\",\n                \"name\": \"calciteDropdownSelect\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when a `calcite-dropdown-item`'s selection changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteDropdownBeforeClose\",\n                \"name\": \"calciteDropdownBeforeClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteDropdownClose\",\n                \"name\": \"calciteDropdownClose\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is closed and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteDropdownBeforeOpen\",\n                \"name\": \"calciteDropdownBeforeOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"calciteDropdownOpen\",\n                \"name\": \"calciteDropdownOpen\",\n                \"bubbles\": true,\n                \"cancelable\": false,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Fires when the component is open and animation is complete.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the component's first focusable element.\",\n                    \"tags\": []\n                }\n            },\n            \"reposition\": {\n                \"complexType\": {\n                    \"signature\": \"(delayed?: boolean) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"delayed\",\n                            \"type\": \"boolean\",\n                            \"docs\": \"\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Updates the position of the component.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"delayed\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"open\",\n                \"methodName\": \"openHandler\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"handleDisabledChange\"\n            }, {\n                \"propName\": \"flipPlacements\",\n                \"methodName\": \"flipPlacementsHandler\"\n            }, {\n                \"propName\": \"maxItems\",\n                \"methodName\": \"maxItemsHandler\"\n            }, {\n                \"propName\": \"overlayPositioning\",\n                \"methodName\": \"overlayPositioningHandler\"\n            }, {\n                \"propName\": \"placement\",\n                \"methodName\": \"placementHandler\"\n            }, {\n                \"propName\": \"scale\",\n                \"methodName\": \"handlePropsChange\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"click\",\n                \"method\": \"closeCalciteDropdownOnClick\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalDropdownCloseRequest\",\n                \"method\": \"closeCalciteDropdownOnEvent\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteDropdownOpen\",\n                \"method\": \"closeCalciteDropdownOnOpenEvent\",\n                \"target\": \"window\",\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"pointerenter\",\n                \"method\": \"pointerEnterHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": true\n            }, {\n                \"name\": \"pointerleave\",\n                \"method\": \"pointerLeaveHandler\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": true\n            }, {\n                \"name\": \"calciteInternalDropdownItemKeyEvent\",\n                \"method\": \"calciteInternalDropdownItemKeyEvent\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"calciteInternalDropdownItemSelect\",\n                \"method\": \"handleItemSelect\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n//# sourceMappingURL=dropdown.js.map\n"],"mappings":";;;;;GAKO,MAAMA,EAAQ,CACjBC,gBAAiB,WCNrB,MAAMC,EAAc,6/D,MCmBPC,EAAQ,MACjBC,YAAAC,G,uUACIC,KAAKC,MAAQ,GACbD,KAAKE,OAAS,GACdF,KAAKG,iBAAmBC,EAAe,YAAY,IAAMJ,KAAKK,gBAC9DL,KAAKM,eAAiBF,EAAe,UAAWG,GAAYP,KAAKQ,uBAAuBD,KACxFP,KAAKS,mBAAqB,UAC1BT,KAAKU,KAAO,oBAAoBA,MAChCV,KAAKW,wBAA0B,GAM/BX,KAAKY,kBAAqBC,IACtBb,KAAKW,wBAA0BE,EAAMC,OAAOC,iBAAiB,CACzDC,QAAS,OAEbhB,KAAKK,aAAa,EAEtBL,KAAKiB,sBAAwB,KACzB,MAAMC,GAAEA,EAAEC,eAAEA,GAAmBnB,KAC/BA,KAAKoB,uBAAyBD,EACxBE,EAA0BF,EAAgBD,GAC1C,IAAI,EAEdlB,KAAKsB,eAAkBT,IACnBb,KAAKuB,SAAWV,EAAMC,OAAOC,iBAAiB,CAC1CC,QAAS,OAEbhB,KAAKwB,WAAW,KAAK,EAEzBxB,KAAKK,YAAc,KACfL,KAAKC,MAAQD,KAAKE,OACbuB,KAAKC,GAAUC,MAAMC,KAAKF,IAAK,MAALA,SAAK,SAALA,EAAOG,iBAAiB,4BAClDC,QAAO,CAACC,EAAeC,IAAiB,IAAID,KAAkBC,IAAe,IAClFhC,KAAKiC,sBACLjC,KAAKwB,WAAW,MAChBxB,KAAKC,MAAMiC,SAASC,GAAUA,EAAKC,MAAQpC,KAAKoC,OAAO,EAE3DpC,KAAKqC,aAAgBxB,IACjB,MAAMX,EAASW,EAAMC,OAChBC,iBAAiB,CAAEC,QAAS,OAC5BsB,QAAQpB,GAAOA,IAAE,MAAFA,SAAE,SAAFA,EAAIqB,QAAQ,4BAChCvC,KAAKE,OAASA,EACdF,KAAKK,cACLL,KAAKwC,kBAAkB,EAE3BxC,KAAKQ,uBAA0BD,IAC3BA,EAAQ2B,SAASO,IACb,MAAM3B,OAAEA,GAAW2B,EACnB,GAAI3B,IAAWd,KAAK0C,YAAa,CAC7B1C,KAAK2C,kB,MAEJ,GAAI7B,IAAWd,KAAK4C,WAAY,CACjC5C,KAAK6C,sB,IAEX,EAEN7C,KAAK2C,iBAAmB,KACpB,MAAMD,YAAEA,EAAWE,WAAEA,GAAe5C,KACpC,MAAM8C,EAAmBJ,IAAW,MAAXA,SAAW,SAAXA,EAAaK,YACtC,IAAKD,IAAqBF,EAAY,CAClC,M,CAEJA,EAAWI,MAAMC,SAAW,GAAGH,KAAoB,EAEvD9C,KAAK6C,qBAAuB,KACxB,MAAMD,WAAEA,GAAe5C,KACvB,IAAK4C,EAAY,CACb,M,CAEJ5C,KAAKwB,WAAW,MAChB,MAAM0B,EAAoBlD,KAAKmD,uBAC/BP,EAAWI,MAAMI,UAAYF,EAAoB,EAAI,GAAGA,MAAwB,GAChFlD,KAAKwB,WAAW,KAAK,EAEzBxB,KAAKqD,2BAA8BnC,IAC/BlB,KAAKM,eAAegD,QAAQpC,GAC5BlB,KAAK4C,WAAa1B,EAClBlB,KAAKuD,aAAerC,CAAE,EAE1BlB,KAAKwD,eAAkBtC,IACnBlB,KAAK0C,YAAcxB,EACnBuC,EAAkBzD,KAAMA,KAAK0C,YAAa1C,KAAK0D,YAC/C1D,KAAKM,eAAegD,QAAQpC,EAAG,EAEnClB,KAAK2D,cAAiBzC,IAClBlB,KAAK0D,WAAaxC,EAClBuC,EAAkBzD,KAAMA,KAAK0C,YAAa1C,KAAK0D,WAAW,EAE9D1D,KAAK4D,eAAkB/C,IACnB,IAAKA,EAAMgD,eAAeC,SAAS9D,KAAK0C,aAAc,CAClD,M,CAEJ,MAAMqB,iBAAEA,EAAgBC,IAAEA,GAAQnD,EAClC,GAAIkD,EAAkB,CAClB,M,CAEJ,GAAI/D,KAAKiE,KAAM,CACX,GAAID,IAAQ,SAAU,CAClBhE,KAAKkE,uBACLrD,EAAMsD,iBACN,M,MAEC,GAAItD,EAAMuD,UAAYJ,IAAQ,MAAO,CACtChE,KAAKkE,uBACLrD,EAAMsD,iBACN,M,EAGR,GAAIE,EAAgBL,GAAM,CACtBhE,KAAKsE,sBACLzD,EAAMsD,gB,MAEL,GAAIH,IAAQ,SAAU,CACvBhE,KAAKkE,uBACLrD,EAAMsD,gB,GAGdnE,KAAKuE,8BAAgC,KACjCvE,KAAKwE,oBAAoBxE,KAAKyE,sBAAsBC,MAAMvC,GAASA,EAAKwC,YAAa3E,KAAKC,MAAM,GAAG,EAEvGD,KAAK4E,cAAgB,KACjB5E,KAAKuE,gCACLvE,KAAKkB,GAAG2D,oBAAoB,sBAAuB7E,KAAK4E,cAAc,EAE1E5E,KAAKsE,oBAAsB,KACvBtE,KAAKiE,MAAQjE,KAAKiE,KAClB,GAAIjE,KAAKiE,KAAM,CACXjE,KAAKkB,GAAG4D,iBAAiB,sBAAuB9E,KAAK4E,c,GAG7D5E,KAAKiE,KAAO,MACZjE,KAAK+E,sBAAwB,MAC7B/E,KAAKgF,SAAW,MAChBhF,KAAKmB,eAAiB8D,UACtBjF,KAAKkF,SAAW,EAChBlF,KAAKmF,mBAAqB,WAC1BnF,KAAKoF,UAAYC,EACjBrF,KAAKsF,cAAgB,GACrBtF,KAAKuF,KAAO,QACZvF,KAAKwF,WAAaP,UAClBjF,KAAKoC,MAAQ,G,CAEjBqD,cACIC,EAA2B1F,MAC3B,GAAIA,KAAKgF,SAAU,CACfhF,KAAKiE,KAAO,MACZ,M,CAEJjE,KAAKwB,WAAW,K,CAEpBmE,qBAAqBC,GACjB,IAAKA,EAAO,CACR5F,KAAKiE,KAAO,K,EAGpB4B,wBACI7F,KAAKiB,wBACLjB,KAAKwB,WAAW,K,CAEpBsE,kBACI9F,KAAK6C,sB,CAETkD,4BACI/F,KAAKwB,WAAW,K,CAEpBwE,mBACIhG,KAAKwB,WAAW,K,CAEpByE,oBACIjG,KAAKK,cACLL,KAAKwC,kB,CAQT0D,uBACUC,EAAmBnG,MACzBA,KAAKkB,GAAGkF,O,CAOZC,oB,OACIC,EAAAtG,KAAKG,oBAAgB,MAAAmG,SAAA,SAAAA,EAAEhD,QAAQtD,KAAKkB,GAAI,CAAEqF,UAAW,KAAMC,QAAS,OACpExG,KAAKiB,wBACL,GAAIjB,KAAKiE,KAAM,CACXjE,KAAKyF,cACLC,EAA2B1F,K,CAE/ByG,EAAmBzG,MACnBA,KAAKK,cACLoD,EAAkBzD,KAAMA,KAAK0C,YAAa1C,KAAK0D,W,CAEnDgD,oBACIC,EAAuB3G,K,CAE3B4G,mBACIC,EAAmB7G,MACnByD,EAAkBzD,KAAMA,KAAK0C,YAAa1C,KAAK0D,W,CAEnDoD,qBACIC,EAAsB/G,K,CAE1BgH,uB,SACIV,EAAAtG,KAAKG,oBAAgB,MAAAmG,SAAA,SAAAA,EAAEW,cACvBC,EAAAlH,KAAKM,kBAAc,MAAA4G,SAAA,SAAAA,EAAED,aACrBE,EAAsBnH,MACtBoH,EAAqBpH,KAAMA,KAAK0C,YAAa1C,KAAK0D,W,CAEtD2D,SACI,MAAMpD,KAAEA,EAAIvD,KAAEA,GAASV,KACvB,OAAQsH,EAAEC,EAAM,CAAEvD,IAAK,4CAA8CsD,EAAEE,EAAsB,CAAExD,IAAK,2CAA4CgB,SAAUhF,KAAKgF,UAAYsC,EAAE,MAAO,CAAEtD,IAAK,2CAA4CyD,MAAO,4BAA6BC,GAAI,GAAGhH,eAAmBiH,QAAS3H,KAAKsE,oBAAqBsD,UAAW5H,KAAK4D,eAAgBiE,IAAK7H,KAAKwD,gBAAkB8D,EAAE,OAAQ,CAAEtD,IAAK,2CAA4C,gBAAiB,GAAGtD,SAAa,gBAAiBoH,EAAc7D,GAAO,gBAAiB,OAAQ8D,KAAMrI,EAAMC,gBAAiBqI,aAAchI,KAAKsB,kBAAoBgG,EAAE,MAAO,CAAEtD,IAAK,2CAA4C,cAAe8D,GAAe7D,GAAOwD,MAAO,2BAA4BI,IAAK7H,KAAK2D,eAAiB2D,EAAE,MAAO,CAAEtD,IAAK,2CAA4C,kBAAmB,GAAGtD,eAAmB+G,MAAO,CACx2B,CAAC,4BAA6B,KAC9B,CAACQ,EAAYC,WAAY,KACzB,CAACD,EAAYE,iBAAkBlE,GAChCyD,GAAI,GAAGhH,SAAamH,IAAK7H,KAAKqD,2BAA4B+E,KAAM,QAAUd,EAAE,OAAQ,CAAEtD,IAAK,2CAA4CgE,aAAchI,KAAKqC,kB,CAYrK6D,iBAAiBmC,EAAU,OACvB,MAAM3E,WAAEA,EAAUhB,YAAEA,EAAW0C,UAAEA,EAASD,mBAAEA,EAAkB/D,uBAAEA,GAA2BpB,KAC3F,OAAOwB,EAAWxB,KAAM,CACpB0D,aACAhB,cACAyC,qBACAC,YACAjE,eAAgBC,EAChBmE,KAAM,QACP8C,E,CAEPC,4BAA4BzH,GACxB,GAAIb,KAAKgF,WAAahF,KAAKiE,MAAQpD,EAAMgD,eAAeC,SAAS9D,KAAKkB,IAAK,CACvE,M,CAEJlB,KAAKkE,qBAAqB,M,CAE9BqE,4BAA4B1H,GACxBb,KAAKkE,uBACLrD,EAAM2H,iB,CAEVC,gCAAgC5H,GAC5B,GAAIA,EAAMgD,eAAeC,SAAS9D,KAAKkB,IAAK,CACxC,M,CAEJlB,KAAKiE,KAAO,K,CAEhByE,sBACI,GAAI1I,KAAKgF,UAAYhF,KAAKuF,OAAS,QAAS,CACxC,M,CAEJvF,KAAKsE,qB,CAETqE,sBACI,GAAI3I,KAAKgF,UAAYhF,KAAKuF,OAAS,QAAS,CACxC,M,CAEJvF,KAAKkE,sB,CAETO,sBACI,OAAOzE,KAAKC,MAAMqC,QAAQH,IAAUA,EAAK6C,WAAa7C,EAAKyG,Q,CAE/DC,oCAAoChI,GAChC,MAAMiI,cAAEA,GAAkBjI,EAAMkI,OAChC,MAAMjI,EAASgI,EAAchI,OAC7B,MAAMkI,EAAmBhJ,KAAKyE,sBAC9B,OAAQqE,EAAc9E,KAClB,IAAK,MACDhE,KAAKiE,KAAO,MACZjE,KAAKiJ,sBAAsBnI,GAC3B,MACJ,IAAK,YACDoI,EAAoBF,EAAkBlI,EAAQ,QAC9C,MACJ,IAAK,UACDoI,EAAoBF,EAAkBlI,EAAQ,YAC9C,MACJ,IAAK,OACDoI,EAAoBF,EAAkBlI,EAAQ,SAC9C,MACJ,IAAK,MACDoI,EAAoBF,EAAkBlI,EAAQ,QAC9C,MAERD,EAAM2H,iB,CAEVW,iBAAiBtI,GACbb,KAAKiC,sBACLpB,EAAM2H,kBACNxI,KAAKoJ,sBAAsBC,OAC3B,IAAKrJ,KAAK+E,uBACNlE,EAAMkI,OAAOO,uBAAuBC,gBAAkB,OAAQ,CAC9DvJ,KAAKkE,sB,CAETrD,EAAM2H,iB,CAEVhG,mB,OACI8D,EAAAtG,KAAKE,UAAM,MAAAoG,SAAA,SAAAA,EAAEpE,SAASR,GAAWA,EAAMU,MAAQpC,KAAKoC,O,CAExDoH,eACIxJ,KAAKyJ,0BAA0BJ,M,CAEnCK,SACI1J,KAAK2J,oBAAoBN,M,CAE7BO,gBACI5J,KAAK6J,2BAA2BR,M,CAEpCS,UACI9J,KAAK+J,qBAAqBV,M,CAE9BpH,sBACIjC,KAAKsF,cAAgBtF,KAAKC,MAAMqC,QAAQH,GAASA,EAAKwC,U,CAE1DxB,uBACI,MAAM+B,SAAEA,EAAQjF,MAAEA,GAAUD,KAC5B,IAAIgK,EAAiB,EACrB,IAAI9G,EAAoB,EACxB,IAAI+G,EACJjK,KAAKE,OAAOgC,SAASR,IACjB,GAAIwD,EAAW,GAAK8E,EAAiB9E,EAAU,CAC3CvD,MAAMC,KAAKF,EAAMwI,UAAUhI,SAAQ,CAACC,EAAMgI,KACtC,GAAIA,IAAU,EAAG,CACb,GAAIC,MAAMH,GAAoB,CAC1BA,EAAoB9H,EAAKkI,S,CAE7BnH,GAAqB+G,C,CAEzB,GAAID,EAAiB9E,EAAU,CAC3BhC,GAAqBf,EAAKmI,aAC1BN,GAAkB,C,SAKlC,OAAO/J,EAAMsK,OAASrF,EAAWhC,EAAoB,C,CAEzDgB,qBAAqBsG,EAAe,MAChCxK,KAAKiE,KAAO,MACZ,GAAIuG,EAAc,CACdC,EAAazK,KAAKuB,SAAS,G,EAGnCiD,oBAAoBrC,GAChB,IAAKA,EAAM,CACP,M,CAEJsI,EAAatI,E,CAEjB8G,sBAAsBnI,GAClBd,KAAKC,MAAMiC,SAASC,IAChBA,EAAKuI,SAAW5J,IAAWqB,GAAQ,EAAI,CAAC,G,CAKrCwI,4BAAmB,OAAO,IAAK,C"}