{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","requiresFormData","params","keys","some","key","value","toParam","type","constructor","name","processParams","newParams","forEach","_a","_b","param","firstElementType","JSON","stringify","join","valueOf","Array","isArray","encodeParam","map","arrayElem","encodeURIComponent","encodeQueryString","browserPonyfill","FormData","globalThis","File","Blob","encodeFormData","forceFormData","useFormData","formData","filename","append","ArcGISRequestError","Error","message","code","response","url","options","super","actualProto","setPrototypeOf","originalMessage","warn","console","getFetch","Promise","resolve","fetch","Headers","Response","Request","request","NODEJS_DEFAULT_REFERER_HEADER","getDefaultRequestOptions","DEFAULT_ARCGIS_REQUEST_OPTIONS","httpMethod","f","ArcGISAuthError","retry","getSession","retryLimit","tries","retryRequest","reject","then","session","newOptions","authentication","internalRequest","catch","e","checkForErrors","originalAuthError","error","messageCode","errorCode","status","parse","statusMessage","requestOptions","defaults","headers","rawResponse","fetchOptions","method","signal","credentials","indexOf","rawToken","portal","getToken","startsWith","suppressWarnings","ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING","originalUrl","err","token","getDomainCredentials","requestHeaders","hideToken","window","queryParams","urlWithQueryString","maxUrlLength","RegExp","test","body","document","referer","ok","json","jsonError","statusText","details","formattedMessage","trim","text","blob","data","truncatedUrl","toLowerCase","split","federatedServers","expires","Date","now","canRefresh","refreshCredentials","cleanUrl","slice","decodeParam","decodeURIComponent","decodeQueryString","query","replace","reduce","acc","entry","fetchToken","r","access_token","username","expires_in","ssl","refresh_token","refreshToken","generateToken","location","host","arcgisOnlineUrlRegex","isOnline","normalizeOnlinePortalUrl","portalUrl","getOnlineEnvironment","match","subdomain","pop","includes","isFederated","owningSystemUrl","normalizedPortalUrl","normalizedOwningSystemUrl","canUseOnlineToken","requestUrl","portalIsOnline","requestIsOnline","portalEnv","requestEnv","validateAppAccess","clientId","ro","client_id","defer","deferred","promise","UserSession","_refreshToken","_refreshTokenExpires","refreshTokenExpires","password","_token","_tokenExpires","tokenExpires","provider","tokenDuration","redirectUri","refreshTokenTTL","trustedServers","server","root","getServerRootUrl","_pendingTokenRequests","defineProperty","get","enumerable","configurable","beginOAuth2","win","duration","popup","popupWindowFeatures","state","locale","href","undefined","errorString","oauthInfoString","errorMessage","oauthInfo","open","completeOAuth2","completeSignIn","handlerFn","handlerFnName","opener","parent","close","hash","error_description","parseInt","fromParent","parentOrigin","handler","event","origin","parentMessageHandler","addEventListener","postMessage","removeEventListener","authorize","writeHead","Location","end","exchangeAuthorizationCode","authorizationCode","grant_type","redirect_uri","deserialize","str","fromCredential","credential","userId","toCredential","getTime","getUser","_this","_pendingUserRequest","_user","getUsername","user","getFreshToken","getTokenForServer","toJSON","serialize","enablePostMessageAuth","validChildOrigins","_hostHandler","createPostMessageHandler","disablePostMessageAuth","refreshSession","refreshWithUsernameAndPassword","refreshWithRefreshToken","protocol","domainAndPath","domain","path","validOrigins","source","existingToken","authInfo","tokenServicesUrl","serverUrl","expiration","client","refreshRefreshToken","getProp","obj","prev","curr","indexOrFnName","propName","idx","applyOperation","$use","arr","operation","parts","result","fnName","args","prop","val","isNumeric","parseFloat","find","isNaN","cloneObject","clone","getWithDefault","def","res","atob","TypeError","output","buffer","accumulatedBits","atobLookup","String","fromCharCode","keystr","chr","index","atob_1","btoa","charCodeAt","out","groupsOfSix","j","btoaLookup","btoa_1","abab","base64ToBytes","base64","binString","Uint8Array","from","m","codePointAt","bytesToBase64","bytes","x","fromCodePoint","unicodeToBase64","TextEncoder","encode","base64ToUnicode","TextDecoder","decode","Level","Logger","static","level","logLevel","objects","isLevelPermitted","debug","log","info","off","getEnvironmentFromPortalUrl","env","getPortalUrl","getSelf","getPortal","id","idOrSelf","getHubApiFromPortalUrl","getPortalBaseFromOrgUrl","orgUrl","hubApiEndpoints","domains","search","discussions","ArcGISContext","opts","_portalUrl","_hubUrl","hubUrl","_systemStatus","systemStatus","_serviceStatus","serviceStatus","_authentication","portalSelf","_portalSelf","currentUser","_currentUser","properties","_properties","isAuthenticated","isAlphaOrg","orgs","alphaOrgs","orgId","isBetaOrg","betaOrgs","environment","userRequestOptions","sharingApiUrl","hubRequestOptions","isPortal","hubApiUrl","urlKey","portalHostname","customBaseUrl","hubHomeUrl","hubHostname","hubLicense","hubEnabled","discussionsServiceUrl","hubSearchServiceUrl","domainServiceUrl","eventsConfig","communityOrgId","communityOrgHostname","communityOrgUrl","helperServices","ArcGISContextManager","_logLevel","setLogLevel","ctx","initialize","serializedContext","decoded","userSession","create","async","auth","setProperties","_context","contextOpts","clearAuthentication","context","requests","all","ex","msg","getSystemStatus","getServiceStatus","HUB_STATUS","ENTERPRISE_SITES_STATUS","content","events","initiatives","items","metrics","notifications","pages","projects","sites","groups","platform","HUB_SERVICE_STATUS","ENTERPRISE_SITES_SERVICE_STATUS","arcgisHubIdentityCss","ArcgisHubIdentity","app","redirect","ctxMgr","arcgisHubIdentitySignedIn","emit","signinClick","evt","CustomEvent","dispatchEvent","signoutClick","signedinEvent","detail","signedoutEvent","_evt","render","h","Host","ref","el","identityEl","renderIdentity","fullName","class","signinButton","onClick"],"sources":["./node_modules/tslib/tslib.es6.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js","./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js","./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/request.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/decode-query-string.js","./node_modules/@esri/arcgis-rest-auth/dist/esm/fetch-token.js","./node_modules/@esri/arcgis-rest-auth/dist/esm/generate-token.js","./node_modules/@esri/arcgis-rest-auth/dist/esm/federation-utils.js","./node_modules/@esri/arcgis-rest-auth/dist/esm/validate-app-access.js","./node_modules/@esri/arcgis-rest-auth/dist/esm/UserSession.js","./node_modules/@esri/hub-common/dist/esm/objects/get-prop.js","./node_modules/@esri/hub-common/dist/esm/util.js","./node_modules/@esri/hub-common/dist/esm/objects/get-with-default.js","./node_modules/abab/lib/atob.js","./node_modules/abab/lib/btoa.js","./node_modules/abab/index.js","./node_modules/@esri/hub-common/dist/esm/utils/encoding.js","./node_modules/@esri/hub-common/dist/esm/utils/logger.js","./node_modules/@esri/hub-common/dist/esm/utils/getEnvironmentFromPortalUrl.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/users/get-user.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal.js","./node_modules/@esri/hub-common/dist/esm/urls/getHubApiFromPortalUrl.js","./node_modules/@esri/hub-common/dist/esm/urls/getPortalBaseFromOrgUrl.js","./node_modules/@esri/hub-common/dist/esm/ArcGISContext.js","./node_modules/@esri/hub-common/dist/esm/ArcGISContextManager.js","./src/components/arcgis-hub-identity/arcgis-hub-identity.css?tag=arcgis-hub-identity&encapsulation=shadow","./src/components/arcgis-hub-identity/arcgis-hub-identity.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params) {\n    return Object.keys(params).some((key) => {\n        let value = params[key];\n        if (!value) {\n            return false;\n        }\n        if (value && value.toParam) {\n            value = value.toParam();\n        }\n        const type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params) {\n    const newParams = {};\n    Object.keys(params).forEach((key) => {\n        var _a, _b;\n        let param = params[key];\n        if (param && param.toParam) {\n            param = param.toParam();\n        }\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        const type = param.constructor.name;\n        let value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of arrays, an array of objects\n                // to be stringified, or an array of non-objects to be comma-separated\n                // eslint-disable-next-line no-case-declarations\n                const firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;\n                value =\n                    firstElementType === \"Array\"\n                        ? param // pass thru array of arrays\n                        : firstElementType === \"Object\"\n                            ? JSON.stringify(param) // stringify array of objects\n                            : param.join(\",\"); // join other types of array elements\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value ||\n            value === 0 ||\n            typeof value === \"string\" ||\n            Array.isArray(value)) {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams } from \"./process-params.js\";\n/**\n * Encodes keys and parameters for use in a URL's query string.\n *\n * @param key Parameter's key\n * @param value Parameter's value\n * @returns Query string with key and value pairs separated by \"&\"\n */\nexport function encodeParam(key, value) {\n    // For array of arrays, repeat key=value for each element of containing array\n    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {\n        return value\n            .map((arrayElem) => encodeParam(key, arrayElem))\n            .join(\"&\");\n    }\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params) {\n    const newParams = processParams(params);\n    return Object.keys(newParams)\n        .map((key) => {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map","module.exports = {\n  FormData: globalThis.FormData,\n  File: globalThis.File,\n  Blob: globalThis.Blob\n};\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams, requiresFormData } from \"./process-params.js\";\nimport { encodeQueryString } from \"./encode-query-string.js\";\nimport { FormData } from \"@esri/arcgis-rest-form-data\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params, forceFormData) {\n    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.\n    const useFormData = requiresFormData(params) || forceFormData;\n    const newParams = processParams(params);\n    if (useFormData) {\n        const formData = new FormData();\n        Object.keys(newParams).forEach((key) => {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                const filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData.append(key, newParams[key], filename);\n            }\n            else {\n                formData.append(key, newParams[key]);\n            }\n        });\n        return formData;\n    }\n    else {\n        return encodeQueryString(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This represents a generic error from an ArcGIS endpoint. There will be details about the error in the {@linkcode ArcGISRequestError.message},  {@linkcode ArcGISRequestError.originalMessage} properties on the error. You\n * can also access the original server response at  {@linkcode ArcGISRequestError.response} which may have additional details.\n *\n * ```js\n * request(someUrl, someOptions).catch(e => {\n *   if(e.name === \"ArcGISRequestError\") {\n *     console.log(\"Something went wrong with the request:\", e);\n *     console.log(\"Full server response\", e.response);\n *   }\n * })\n * ```\n */\nexport class ArcGISRequestError extends Error {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message, code, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISRequestError.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map","module.exports.getFetch = function getFetch() {\n  return Promise.resolve({\n    fetch: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Response: globalThis.Response,\n    Request: globalThis.request\n  });\n};\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { encodeFormData } from \"./utils/encode-form-data.js\";\nimport { encodeQueryString } from \"./utils/encode-query-string.js\";\nimport { requiresFormData } from \"./utils/process-params.js\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError.js\";\nimport { warn } from \"./utils/warn.js\";\nimport { getFetch } from \"@esri/arcgis-rest-fetch\";\nexport const NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n/**\n * Sets the default options that will be passed in **all requests across all `@esri/arcgis-rest-js` modules**.\n *\n * ```js\n * import { setDefaultRequestOptions } from \"@esri/arcgis-rest-request\";\n *\n * setDefaultRequestOptions({\n *   authentication: ArcGISIdentityManager // all requests will use this session by default\n * })\n * ```\n *\n * You should **never** set a default `authentication` when you are in a server side environment where you may be handling requests for many different authenticated users.\n *\n * @param options The default options to pass with every request. Existing default will be overwritten.\n * @param hideWarnings Silence warnings about setting default `authentication` in shared environments.\n */\nexport function setDefaultRequestOptions(options, hideWarnings) {\n    if (options.authentication && !hideWarnings) {\n        warn(\"You should not set `authentication` as a default in a shared environment such as a web server which will process multiple users requests. You can call `setDefaultRequestOptions` with `true` as a second argument to disable this warning.\");\n    }\n    globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS = options;\n}\nexport function getDefaultRequestOptions() {\n    return (globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS || {\n        httpMethod: \"POST\",\n        params: {\n            f: \"json\"\n        }\n    });\n}\n/**\n * This error is thrown when a request encounters an invalid token error. Requests that use {@linkcode ArcGISIdentityManager} or\n * {@linkcode ApplicationCredentialsManager} in the `authentication` option the authentication manager will automatically try to generate\n * a fresh token using either {@linkcode ArcGISIdentityManager.refreshCredentials} or\n * {@linkcode ApplicationCredentialsManager.refreshCredentials}. If the request with the new token fails you will receive an `ArcGISAuthError`\n * if refreshing the token fails you will receive an instance of {@linkcode ArcGISTokenRequestError}.\n *\n * ```js\n * request(someUrl, {\n *   authentication: identityManager,\n *   // some additional options...\n * }).catch(e => {\n *   if(e.name === \"ArcGISAuthError\") {\n *     console.log(\"Request with a new token failed you might want to have the user authorize again.\")\n *   }\n *\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     console.log(\"There was an error refreshing the token you might want to have the user authorize again.\")\n *   }\n * })\n * ```\n */\nexport class ArcGISAuthError extends ArcGISRequestError {\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    constructor(message = \"AUTHENTICATION_ERROR\", code = \"AUTHENTICATION_ERROR_CODE\", response, url, options) {\n        super(message, code, response, url, options);\n        this.name = \"ArcGISAuthError\";\n        this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n    }\n    retry(getSession, retryLimit = 1) {\n        let tries = 0;\n        const retryRequest = (resolve, reject) => {\n            tries = tries + 1;\n            getSession(this.url, this.options)\n                .then((session) => {\n                const newOptions = Object.assign(Object.assign({}, this.options), { authentication: session });\n                return internalRequest(this.url, newOptions);\n            })\n                .then((response) => {\n                resolve(response);\n            })\n                .catch((e) => {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === this.name &&\n                    e.message === this.message &&\n                    tries >= retryLimit) {\n                    reject(this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            retryRequest(resolve, reject);\n        });\n    }\n}\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(response, url, params, options, originalAuthError) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        const { message, code } = response;\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        const { message, code, messageCode } = response.error;\n        const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499) {\n            if (originalAuthError) {\n                throw originalAuthError;\n            }\n            else {\n                throw new ArcGISAuthError(message, errorCode, response, url, options);\n            }\n        }\n        throw new ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        let message;\n        let code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n/**\n * This is the internal implementation of `request` without the automatic retry behavior to prevent\n * infinite loops when a server continues to return invalid token errors.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n * @internal\n */\nexport function internalRequest(url, requestOptions) {\n    const defaults = getDefaultRequestOptions();\n    const options = Object.assign(Object.assign(Object.assign({ httpMethod: \"POST\" }, defaults), requestOptions), {\n        params: Object.assign(Object.assign({}, defaults.params), requestOptions.params),\n        headers: Object.assign(Object.assign({}, defaults.headers), requestOptions.headers)\n    });\n    const { httpMethod, rawResponse } = options;\n    const params = Object.assign({ f: \"json\" }, options.params);\n    let originalAuthError = null;\n    const fetchOptions = {\n        method: httpMethod,\n        signal: options.signal,\n        /* ensures behavior mimics XMLHttpRequest.\n        needed to support sending IWA cookies */\n        credentials: options.credentials || \"same-origin\"\n    };\n    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header\n    // and that request needs to send cookies cross domain\n    // so we need to set the credentials to \"include\"\n    if (options.headers &&\n        options.headers[\"X-Esri-Auth-Client-Id\"] &&\n        url.indexOf(\"/oauth2/platformSelf\") > -1) {\n        fetchOptions.credentials = \"include\";\n    }\n    let authentication;\n    // Check to see if this is a raw token as a string and create a IAuthenticationManager like object for it.\n    // Otherwise this just assumes that options.authentication is an IAuthenticationManager.\n    if (typeof options.authentication === \"string\") {\n        const rawToken = options.authentication;\n        authentication = {\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            getToken: () => {\n                return Promise.resolve(rawToken);\n            }\n        };\n        /* istanbul ignore else - we don't need to test NOT warning people */\n        if (!options.authentication.startsWith(\"AAPK\") &&\n            !options.authentication.startsWith(\"AATK\") && // doesn't look like an API Key\n            !options.suppressWarnings && // user doesn't want to suppress warnings for this request\n            !globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING // we haven't shown the user this warning yet\n        ) {\n            warn(`Using an oAuth 2.0 access token directly in the token option is discouraged. Consider using ArcGISIdentityManager or Application session. See https://esriurl.com/arcgis-rest-js-direct-token-warning for more information.`);\n            globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING = true;\n        }\n    }\n    else {\n        authentication = options.authentication;\n    }\n    // for errors in GET requests we want the URL passed to the error to be the URL before\n    // query params are applied.\n    const originalUrl = url;\n    return (authentication\n        ? authentication.getToken(url).catch((err) => {\n            /**\n             * append original request url and requestOptions\n             * to the error thrown by getToken()\n             * to assist with retrying\n             */\n            err.url = url;\n            err.options = options;\n            /**\n             * if an attempt is made to talk to an unfederated server\n             * first try the request anonymously. if a 'token required'\n             * error is thrown, throw the UNFEDERATED error then.\n             */\n            originalAuthError = err;\n            return Promise.resolve(\"\");\n        })\n        : Promise.resolve(\"\"))\n        .then((token) => {\n        if (token.length) {\n            params.token = token;\n        }\n        if (authentication && authentication.getDomainCredentials) {\n            fetchOptions.credentials = authentication.getDomainCredentials(url);\n        }\n        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.\n        const requestHeaders = {};\n        if (fetchOptions.method === \"GET\") {\n            // Prevents token from being passed in query params when hideToken option is used.\n            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */\n            if (params.token &&\n                options.hideToken &&\n                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\n                typeof window === \"undefined\") {\n                requestHeaders[\"X-Esri-Authorization\"] = `Bearer ${params.token}`;\n                delete params.token;\n            }\n            // encode the parameters into the query string\n            const queryParams = encodeQueryString(params);\n            // dont append a '?' unless parameters are actually present\n            const urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n            if (\n            // This would exceed the maximum length for URLs specified by the consumer and requires POST\n            (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) ||\n                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)\n                (params.token && options.hideToken)) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n                // If the token was already added as a Auth header, add the token back to body with other params instead of header\n                if (token.length && options.hideToken) {\n                    params.token = token;\n                    // Remove existing header that was added before url query length was checked\n                    delete requestHeaders[\"X-Esri-Authorization\"];\n                }\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        /* updateResources currently requires FormData even when the input parameters dont warrant it.\n    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm\n        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */\n        const forceFormData = new RegExp(\"/items/.+/updateResources\").test(url);\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = encodeFormData(params, forceFormData);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = Object.assign(Object.assign({}, requestHeaders), options.headers);\n        // This should have the same conditional for Node JS as ArcGISIdentityManager.refreshWithUsernameAndPassword()\n        // to ensure that generated tokens have the same referer when used in Node with a username and password.\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if ((typeof window === \"undefined\" ||\n            (window && typeof window.document === \"undefined\")) &&\n            !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!requiresFormData(params) && !forceFormData) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        /**\n         * Check for a global fetch first and use it if available. This allows us to use the default\n         * configuration of fetch-mock in tests.\n         */\n        /* istanbul ignore next coverage is based on browser code and we don't test for the absence of global fetch so we can skip the else here. */\n        return globalThis.fetch\n            ? globalThis.fetch(url, fetchOptions)\n            : getFetch().then(({ fetch }) => {\n                return fetch(url, fetchOptions);\n            });\n    })\n        .then((response) => {\n        // the request got back an error status code (4xx, 5xx)\n        if (!response.ok) {\n            // we need to determine if the server returned a JSON body with more details.\n            // this is the format used by newer services such as the Places and Style service.\n            return response\n                .json()\n                .then((jsonError) => {\n                // The body can be parsed as JSON\n                const { status, statusText } = response;\n                const { message, details } = jsonError.error;\n                const formattedMessage = `${message}. ${details ? details.join(\" \") : \"\"}`.trim();\n                throw new ArcGISRequestError(formattedMessage, `HTTP ${status} ${statusText}`, jsonError, url, options);\n            })\n                .catch((e) => {\n                // if we already were about to format this as an ArcGISRequestError throw that error\n                if (e.name === \"ArcGISRequestError\") {\n                    throw e;\n                }\n                // server responded w/ an actual error (404, 500, etc) but we could not parse it as JSON\n                const { status, statusText } = response;\n                throw new ArcGISRequestError(statusText, `HTTP ${status}`, response, url, options);\n            });\n        }\n        if (rawResponse) {\n            return response;\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then((data) => {\n        // Check for an error in the JSON body of a successful response.\n        // Most ArcGIS Server services will return a successful status code but include an error in the response body.\n        if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n            const response = checkForErrors(data, originalUrl, params, options, originalAuthError);\n            if (originalAuthError) {\n                /* If the request was made to an unfederated service that\n                didn't require authentication, add the base url and a dummy token\n                to the list of trusted servers to avoid another federation check\n                in the event of a repeat request */\n                const truncatedUrl = url\n                    .toLowerCase()\n                    .split(/\\/rest(\\/admin)?\\/services\\//)[0];\n                options.authentication.federatedServers[truncatedUrl] = {\n                    token: [],\n                    // default to 24 hours\n                    expires: new Date(Date.now() + 86400 * 1000)\n                };\n                originalAuthError = null;\n            }\n            return response;\n        }\n        else {\n            return data;\n        }\n    });\n}\n/**\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n *\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n *\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n *\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(url, requestOptions = { params: { f: \"json\" } }) {\n    return internalRequest(url, requestOptions).catch((e) => {\n        if (e instanceof ArcGISAuthError &&\n            requestOptions.authentication &&\n            typeof requestOptions.authentication !== \"string\" &&\n            requestOptions.authentication.canRefresh &&\n            requestOptions.authentication.refreshCredentials) {\n            return e.retry(() => {\n                return requestOptions.authentication.refreshCredentials();\n            }, 1);\n        }\n        else {\n            return Promise.reject(e);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map","/* Copyright (c) 2017-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport function decodeParam(param) {\n    const [key, value] = param.split(\"=\");\n    return { key: decodeURIComponent(key), value: decodeURIComponent(value) };\n}\n/**\n * Decodes the passed query string as an object.\n *\n * @param query A string to be decoded.\n * @returns A decoded query param object.\n */\nexport function decodeQueryString(query) {\n    if (!query || query.length <= 0) {\n        return {};\n    }\n    return query\n        .replace(/^#/, \"\")\n        .replace(/^\\?/, \"\")\n        .split(\"&\")\n        .reduce((acc, entry) => {\n        const { key, value } = decodeParam(entry);\n        acc[key] = value;\n        return acc;\n    }, {});\n}\n//# sourceMappingURL=decode-query-string.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"@esri/arcgis-rest-request\";\nexport function fetchToken(url, requestOptions) {\n    var options = requestOptions;\n    // we generate a response, so we can't return the raw response\n    options.rawResponse = false;\n    return request(url, options).then(function (response) {\n        var r = {\n            token: response.access_token,\n            username: response.username,\n            expires: new Date(\n            // convert seconds in response to milliseconds and add the value to the current time to calculate a static expiration timestamp\n            Date.now() + (response.expires_in * 1000 - 1000)),\n            ssl: response.ssl === true\n        };\n        if (response.refresh_token) {\n            r.refreshToken = response.refresh_token;\n        }\n        return r;\n    });\n}\n//# sourceMappingURL=fetch-token.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, NODEJS_DEFAULT_REFERER_HEADER } from \"@esri/arcgis-rest-request\";\nexport function generateToken(url, requestOptions) {\n    var options = requestOptions;\n    /* istanbul ignore else */\n    if (typeof window !== \"undefined\" &&\n        window.location &&\n        window.location.host) {\n        options.params.referer = window.location.host;\n    }\n    else {\n        options.params.referer = NODEJS_DEFAULT_REFERER_HEADER;\n    }\n    return request(url, options);\n}\n//# sourceMappingURL=generate-token.js.map","import { cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nvar arcgisOnlineUrlRegex = /^https?:\\/\\/(\\S+)\\.arcgis\\.com.+/;\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nvar arcgisOnlinePortalRegex = /^https?:\\/\\/(dev|devext|qa|qaext|www)\\.arcgis\\.com\\/sharing\\/rest+/;\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nvar arcgisOnlineOrgPortalRegex = /^https?:\\/\\/(?:[a-z0-9-]+\\.maps(dev|devext|qa|qaext)?)?.\\arcgis\\.com\\/sharing\\/rest/;\nexport function isOnline(url) {\n    return arcgisOnlineUrlRegex.test(url);\n}\nexport function normalizeOnlinePortalUrl(portalUrl) {\n    if (!arcgisOnlineUrlRegex.test(portalUrl)) {\n        return portalUrl;\n    }\n    switch (getOnlineEnvironment(portalUrl)) {\n        case \"dev\":\n            return \"https://devext.arcgis.com/sharing/rest\";\n        case \"qa\":\n            return \"https://qaext.arcgis.com/sharing/rest\";\n        default:\n            return \"https://www.arcgis.com/sharing/rest\";\n    }\n}\nexport function getOnlineEnvironment(url) {\n    if (!arcgisOnlineUrlRegex.test(url)) {\n        return null;\n    }\n    var match = url.match(arcgisOnlineUrlRegex);\n    var subdomain = match[1].split(\".\").pop();\n    if (subdomain.includes(\"dev\")) {\n        return \"dev\";\n    }\n    if (subdomain.includes(\"qa\")) {\n        return \"qa\";\n    }\n    return \"production\";\n}\nexport function isFederated(owningSystemUrl, portalUrl) {\n    var normalizedPortalUrl = cleanUrl(normalizeOnlinePortalUrl(portalUrl)).replace(/https?:\\/\\//, \"\");\n    var normalizedOwningSystemUrl = cleanUrl(owningSystemUrl).replace(/https?:\\/\\//, \"\");\n    return new RegExp(normalizedOwningSystemUrl, \"i\").test(normalizedPortalUrl);\n}\nexport function canUseOnlineToken(portalUrl, requestUrl) {\n    var portalIsOnline = isOnline(portalUrl);\n    var requestIsOnline = isOnline(requestUrl);\n    var portalEnv = getOnlineEnvironment(portalUrl);\n    var requestEnv = getOnlineEnvironment(requestUrl);\n    if (portalIsOnline && requestIsOnline && portalEnv === requestEnv) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=federation-utils.js.map","/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"@esri/arcgis-rest-request\";\n/**\n * Validates that the user has access to the application\n * and if they user should be presented a \"View Only\" mode\n *\n * This is only needed/valid for Esri applications that are \"licensed\"\n * and shipped in ArcGIS Online or ArcGIS Enterprise. Most custom applications\n * should not need or use this.\n *\n * ```js\n * import { validateAppAccess } from '@esri/arcgis-rest-auth';\n *\n * return validateAppAccess('your-token', 'theClientId')\n * .then((result) => {\n *    if (!result.valud) {\n *      // redirect or show some other ui\n *    } else {\n *      if (result.viewOnlyUserTypeApp) {\n *        // use this to inform your app to show a \"View Only\" mode\n *      }\n *    }\n * })\n * .catch((err) => {\n *  // two possible errors\n *  // invalid clientId: {\"error\":{\"code\":400,\"messageCode\":\"GWM_0007\",\"message\":\"Invalid request\",\"details\":[]}}\n *  // invalid token: {\"error\":{\"code\":498,\"message\":\"Invalid token.\",\"details\":[]}}\n * })\n * ```\n *\n * Note: This is only usable by Esri applications hosted on *arcgis.com, *esri.com or within\n * an ArcGIS Enterprise installation. Custom applications can not use this.\n *\n * @param token platform token\n * @param clientId application client id\n * @param portal Optional\n */\nexport function validateAppAccess(token, clientId, portal) {\n    if (portal === void 0) { portal = \"https://www.arcgis.com/sharing/rest\"; }\n    var url = portal + \"/oauth2/validateAppAccess\";\n    var ro = {\n        method: \"POST\",\n        params: {\n            f: \"json\",\n            client_id: clientId,\n            token: token,\n        },\n    };\n    return request(url, ro);\n}\n//# sourceMappingURL=validate-app-access.js.map","/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { __assign } from \"tslib\";\nimport { request, ArcGISAuthError, cleanUrl, encodeQueryString, decodeQueryString, } from \"@esri/arcgis-rest-request\";\nimport { generateToken } from \"./generate-token\";\nimport { fetchToken } from \"./fetch-token\";\nimport { canUseOnlineToken, isFederated } from \"./federation-utils\";\nimport { validateAppAccess } from \"./validate-app-access\";\nfunction defer() {\n    var deferred = {\n        promise: null,\n        resolve: null,\n        reject: null,\n    };\n    deferred.promise = new Promise(function (resolve, reject) {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\n/**\n * Used to test if a URL is an ArcGIS Online URL\n */\nvar arcgisOnlineUrlRegex = /^https?:\\/\\/\\S+\\.arcgis\\.com.+/;\n/**\n * Used to test if a URL is production ArcGIS Online Portal\n */\nvar arcgisOnlinePortalRegex = /^https?:\\/\\/www\\.arcgis\\.com\\/sharing\\/rest+/;\n/**\n * Used to test if a URL is an ArcGIS Online Organization Portal\n */\nvar arcgisOnlineOrgPortalRegex = /^https?:\\/\\/(?:[a-z0-9-]+\\.maps)?.\\arcgis\\.com\\/sharing\\/rest/;\n/**\n * ```js\n * import { UserSession } from '@esri/arcgis-rest-auth';\n * UserSession.beginOAuth2({\n *   // register an app of your own to create a unique clientId\n *   clientId: \"abc123\",\n *   redirectUri: 'https://yourapp.com/authenticate.html'\n * })\n *   .then(session)\n * // or\n * new UserSession({\n *   username: \"jsmith\",\n *   password: \"123456\"\n * })\n * // or\n * UserSession.deserialize(cache)\n * ```\n * Used to authenticate both ArcGIS Online and ArcGIS Enterprise users. `UserSession` includes helper methods for [OAuth 2.0](/arcgis-rest-js/guides/browser-authentication/) in both browser and server applications.\n */\nvar UserSession = /** @class */ (function () {\n    function UserSession(options) {\n        this.clientId = options.clientId;\n        this._refreshToken = options.refreshToken;\n        this._refreshTokenExpires = options.refreshTokenExpires;\n        this.username = options.username;\n        this.password = options.password;\n        this._token = options.token;\n        this._tokenExpires = options.tokenExpires;\n        this.portal = options.portal\n            ? cleanUrl(options.portal)\n            : \"https://www.arcgis.com/sharing/rest\";\n        this.ssl = options.ssl;\n        this.provider = options.provider || \"arcgis\";\n        this.tokenDuration = options.tokenDuration || 20160;\n        this.redirectUri = options.redirectUri;\n        this.refreshTokenTTL = options.refreshTokenTTL || 1440;\n        this.trustedServers = {};\n        // if a non-federated server was passed explicitly, it should be trusted.\n        if (options.server) {\n            // if the url includes more than '/arcgis/', trim the rest\n            var root = this.getServerRootUrl(options.server);\n            this.trustedServers[root] = {\n                token: options.token,\n                expires: options.tokenExpires,\n            };\n        }\n        this._pendingTokenRequests = {};\n    }\n    Object.defineProperty(UserSession.prototype, \"token\", {\n        /**\n         * The current ArcGIS Online or ArcGIS Enterprise `token`.\n         */\n        get: function () {\n            return this._token;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(UserSession.prototype, \"tokenExpires\", {\n        /**\n         * The expiration time of the current `token`.\n         */\n        get: function () {\n            return this._tokenExpires;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(UserSession.prototype, \"refreshToken\", {\n        /**\n         * The current token to ArcGIS Online or ArcGIS Enterprise.\n         */\n        get: function () {\n            return this._refreshToken;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(UserSession.prototype, \"refreshTokenExpires\", {\n        /**\n         * The expiration time of the current `refreshToken`.\n         */\n        get: function () {\n            return this._refreshTokenExpires;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Begins a new browser-based OAuth 2.0 sign in. If `options.popup` is `true` the\n     * authentication window will open in a new tab/window otherwise the user will\n     * be redirected to the authorization page in their current tab/window.\n     *\n     * @browserOnly\n     */\n    /* istanbul ignore next */\n    UserSession.beginOAuth2 = function (options, win) {\n        if (win === void 0) { win = window; }\n        var _a = __assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            provider: \"arcgis\",\n            duration: 20160,\n            popup: true,\n            popupWindowFeatures: \"height=400,width=600,menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes\",\n            state: options.clientId,\n            locale: \"\",\n        }, options), portal = _a.portal, provider = _a.provider, clientId = _a.clientId, duration = _a.duration, redirectUri = _a.redirectUri, popup = _a.popup, popupWindowFeatures = _a.popupWindowFeatures, state = _a.state, locale = _a.locale, params = _a.params;\n        var url;\n        if (provider === \"arcgis\") {\n            url = portal + \"/oauth2/authorize?client_id=\" + clientId + \"&response_type=token&expiration=\" + duration + \"&redirect_uri=\" + encodeURIComponent(redirectUri) + \"&state=\" + state + \"&locale=\" + locale;\n        }\n        else {\n            url = portal + \"/oauth2/social/authorize?client_id=\" + clientId + \"&socialLoginProviderName=\" + provider + \"&autoAccountCreateForSocial=true&response_type=token&expiration=\" + duration + \"&redirect_uri=\" + encodeURIComponent(redirectUri) + \"&state=\" + state + \"&locale=\" + locale;\n        }\n        // append additional params\n        if (params) {\n            url = url + \"&\" + encodeQueryString(params);\n        }\n        if (!popup) {\n            win.location.href = url;\n            return undefined;\n        }\n        var session = defer();\n        win[\"__ESRI_REST_AUTH_HANDLER_\" + clientId] = function (errorString, oauthInfoString) {\n            if (errorString) {\n                var error = JSON.parse(errorString);\n                session.reject(new ArcGISAuthError(error.errorMessage, error.error));\n                return;\n            }\n            if (oauthInfoString) {\n                var oauthInfo = JSON.parse(oauthInfoString);\n                session.resolve(new UserSession({\n                    clientId: clientId,\n                    portal: portal,\n                    ssl: oauthInfo.ssl,\n                    token: oauthInfo.token,\n                    tokenExpires: new Date(oauthInfo.expires),\n                    username: oauthInfo.username,\n                }));\n            }\n        };\n        win.open(url, \"oauth-window\", popupWindowFeatures);\n        return session.promise;\n    };\n    /**\n     * Completes a browser-based OAuth 2.0  in. If `options.popup` is `true` the user\n     * will be returned to the previous window. Otherwise a new `UserSession`\n     * will be returned. You must pass the same values for `options.popup` and\n     * `options.portal` as you used in `beginOAuth2()`.\n     *\n     * @browserOnly\n     */\n    /* istanbul ignore next */\n    UserSession.completeOAuth2 = function (options, win) {\n        if (win === void 0) { win = window; }\n        var _a = __assign({ portal: \"https://www.arcgis.com/sharing/rest\", popup: true }, options), portal = _a.portal, clientId = _a.clientId, popup = _a.popup;\n        function completeSignIn(error, oauthInfo) {\n            try {\n                var handlerFn = void 0;\n                var handlerFnName = \"__ESRI_REST_AUTH_HANDLER_\" + clientId;\n                if (popup) {\n                    // Guard b/c IE does not support window.opener\n                    if (win.opener) {\n                        if (win.opener.parent && win.opener.parent[handlerFnName]) {\n                            handlerFn = win.opener.parent[handlerFnName];\n                        }\n                        else if (win.opener && win.opener[handlerFnName]) {\n                            // support pop-out oauth from within an iframe\n                            handlerFn = win.opener[handlerFnName];\n                        }\n                    }\n                    else {\n                        // IE\n                        if (win !== win.parent && win.parent && win.parent[handlerFnName]) {\n                            handlerFn = win.parent[handlerFnName];\n                        }\n                    }\n                    // if we have a handler fn, call it and close the window\n                    if (handlerFn) {\n                        handlerFn(error ? JSON.stringify(error) : undefined, JSON.stringify(oauthInfo));\n                        win.close();\n                        return undefined;\n                    }\n                }\n            }\n            catch (e) {\n                throw new ArcGISAuthError(\"Unable to complete authentication. It's possible you specified popup based oAuth2 but no handler from \\\"beginOAuth2()\\\" present. This generally happens because the \\\"popup\\\" option differs between \\\"beginOAuth2()\\\" and \\\"completeOAuth2()\\\".\");\n            }\n            if (error) {\n                throw new ArcGISAuthError(error.errorMessage, error.error);\n            }\n            return new UserSession({\n                clientId: clientId,\n                portal: portal,\n                ssl: oauthInfo.ssl,\n                token: oauthInfo.token,\n                tokenExpires: oauthInfo.expires,\n                username: oauthInfo.username,\n            });\n        }\n        var params = decodeQueryString(win.location.hash);\n        if (!params.access_token) {\n            var error = void 0;\n            var errorMessage = \"Unknown error\";\n            if (params.error) {\n                error = params.error;\n                errorMessage = params.error_description;\n            }\n            return completeSignIn({ error: error, errorMessage: errorMessage });\n        }\n        var token = params.access_token;\n        var expires = new Date(Date.now() + parseInt(params.expires_in, 10) * 1000 - 60 * 1000);\n        var username = params.username;\n        var ssl = params.ssl === \"true\";\n        return completeSignIn(undefined, {\n            token: token,\n            expires: expires,\n            ssl: ssl,\n            username: username,\n        });\n    };\n    /**\n     * Request session information from the parent application\n     *\n     * When an application is embedded into another application via an IFrame, the embedded app can\n     * use `window.postMessage` to request credentials from the host application.\n     *\n     * @param parentOrigin origin of the parent frame. Passed into the embedded application as `parentOrigin` query param\n     * @browserOnly\n     */\n    UserSession.fromParent = function (parentOrigin, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        // Declar handler outside of promise scope so we can detach it\n        var handler;\n        // return a promise that will resolve when the handler recieves\n        // session information from the correct origin\n        return new Promise(function (resolve, reject) {\n            // create an event handler that just wraps the parentMessageHandler\n            handler = function (event) {\n                // ensure we only listen to events from the specified parent\n                // if the origin is not the parent origin, we don't send any response\n                if (event.origin === parentOrigin) {\n                    try {\n                        return resolve(UserSession.parentMessageHandler(event));\n                    }\n                    catch (err) {\n                        return reject(err);\n                    }\n                }\n            };\n            // add listener\n            win.addEventListener(\"message\", handler, false);\n            win.parent.postMessage({ type: \"arcgis:auth:requestCredential\" }, parentOrigin);\n        }).then(function (session) {\n            win.removeEventListener(\"message\", handler, false);\n            return session;\n        });\n    };\n    /**\n     * Begins a new server-based OAuth 2.0 sign in. This will redirect the user to\n     * the ArcGIS Online or ArcGIS Enterprise authorization page.\n     *\n     * @nodeOnly\n     */\n    UserSession.authorize = function (options, response) {\n        var _a = __assign({ portal: \"https://arcgis.com/sharing/rest\", duration: 20160 }, options), portal = _a.portal, clientId = _a.clientId, duration = _a.duration, redirectUri = _a.redirectUri;\n        response.writeHead(301, {\n            Location: portal + \"/oauth2/authorize?client_id=\" + clientId + \"&duration=\" + duration + \"&response_type=code&redirect_uri=\" + encodeURIComponent(redirectUri),\n        });\n        response.end();\n    };\n    /**\n     * Completes the server-based OAuth 2.0 sign in process by exchanging the `authorizationCode`\n     * for a `access_token`.\n     *\n     * @nodeOnly\n     */\n    UserSession.exchangeAuthorizationCode = function (options, authorizationCode) {\n        var _a = __assign({\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            refreshTokenTTL: 1440,\n        }, options), portal = _a.portal, clientId = _a.clientId, redirectUri = _a.redirectUri, refreshTokenTTL = _a.refreshTokenTTL;\n        return fetchToken(portal + \"/oauth2/token\", {\n            params: {\n                grant_type: \"authorization_code\",\n                client_id: clientId,\n                redirect_uri: redirectUri,\n                code: authorizationCode,\n            },\n        }).then(function (response) {\n            return new UserSession({\n                clientId: clientId,\n                portal: portal,\n                ssl: response.ssl,\n                redirectUri: redirectUri,\n                refreshToken: response.refreshToken,\n                refreshTokenTTL: refreshTokenTTL,\n                refreshTokenExpires: new Date(Date.now() + (refreshTokenTTL - 1) * 1000),\n                token: response.token,\n                tokenExpires: response.expires,\n                username: response.username,\n            });\n        });\n    };\n    UserSession.deserialize = function (str) {\n        var options = JSON.parse(str);\n        return new UserSession({\n            clientId: options.clientId,\n            refreshToken: options.refreshToken,\n            refreshTokenExpires: new Date(options.refreshTokenExpires),\n            username: options.username,\n            password: options.password,\n            token: options.token,\n            tokenExpires: new Date(options.tokenExpires),\n            portal: options.portal,\n            ssl: options.ssl,\n            tokenDuration: options.tokenDuration,\n            redirectUri: options.redirectUri,\n            refreshTokenTTL: options.refreshTokenTTL,\n        });\n    };\n    /**\n     * Translates authentication from the format used in the [ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/).\n     *\n     * ```js\n     * UserSession.fromCredential({\n     *   userId: \"jsmith\",\n     *   token: \"secret\"\n     * });\n     * ```\n     *\n     * @returns UserSession\n     */\n    UserSession.fromCredential = function (credential) {\n        return new UserSession({\n            portal: credential.server.includes(\"sharing/rest\")\n                ? credential.server\n                : credential.server + \"/sharing/rest\",\n            ssl: credential.ssl,\n            token: credential.token,\n            username: credential.userId,\n            tokenExpires: new Date(credential.expires),\n        });\n    };\n    /**\n     * Handle the response from the parent\n     * @param event DOM Event\n     */\n    UserSession.parentMessageHandler = function (event) {\n        if (event.data.type === \"arcgis:auth:credential\") {\n            return UserSession.fromCredential(event.data.credential);\n        }\n        if (event.data.type === \"arcgis:auth:rejected\") {\n            throw new Error(event.data.message);\n        }\n        else {\n            throw new Error(\"Unknown message type.\");\n        }\n    };\n    /**\n     * Returns authentication in a format useable in the [ArcGIS API for JavaScript](https://developers.arcgis.com/javascript/).\n     *\n     * ```js\n     * esriId.registerToken(session.toCredential());\n     * ```\n     *\n     * @returns ICredential\n     */\n    UserSession.prototype.toCredential = function () {\n        return {\n            expires: this.tokenExpires.getTime(),\n            server: this.portal,\n            ssl: this.ssl,\n            token: this.token,\n            userId: this.username,\n        };\n    };\n    /**\n     * Returns information about the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic.\n     *\n     * ```js\n     * session.getUser()\n     *   .then(response => {\n     *     console.log(response.role); // \"org_admin\"\n     *   })\n     * ```\n     *\n     * @param requestOptions - Options for the request. NOTE: `rawResponse` is not supported by this operation.\n     * @returns A Promise that will resolve with the data from the response.\n     */\n    UserSession.prototype.getUser = function (requestOptions) {\n        var _this = this;\n        if (this._pendingUserRequest) {\n            return this._pendingUserRequest;\n        }\n        else if (this._user) {\n            return Promise.resolve(this._user);\n        }\n        else {\n            var url = this.portal + \"/community/self\";\n            var options = __assign(__assign({ httpMethod: \"GET\", authentication: this }, requestOptions), { rawResponse: false });\n            this._pendingUserRequest = request(url, options).then(function (response) {\n                _this._user = response;\n                _this._pendingUserRequest = null;\n                return response;\n            });\n            return this._pendingUserRequest;\n        }\n    };\n    /**\n     * Returns the username for the currently logged in [user](https://developers.arcgis.com/rest/users-groups-and-items/user.htm). Subsequent calls will *not* result in additional web traffic. This is also used internally when a username is required for some requests but is not present in the options.\n     *\n     *    * ```js\n     * session.getUsername()\n     *   .then(response => {\n     *     console.log(response); // \"casey_jones\"\n     *   })\n     * ```\n     */\n    UserSession.prototype.getUsername = function () {\n        if (this.username) {\n            return Promise.resolve(this.username);\n        }\n        else if (this._user) {\n            return Promise.resolve(this._user.username);\n        }\n        else {\n            return this.getUser().then(function (user) {\n                return user.username;\n            });\n        }\n    };\n    /**\n     * Gets an appropriate token for the given URL. If `portal` is ArcGIS Online and\n     * the request is to an ArcGIS Online domain `token` will be used. If the request\n     * is to the current `portal` the current `token` will also be used. However if\n     * the request is to an unknown server we will validate the server with a request\n     * to our current `portal`.\n     */\n    UserSession.prototype.getToken = function (url, requestOptions) {\n        if (canUseOnlineToken(this.portal, url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else if (new RegExp(this.portal, \"i\").test(url)) {\n            return this.getFreshToken(requestOptions);\n        }\n        else {\n            return this.getTokenForServer(url, requestOptions);\n        }\n    };\n    /**\n     * Get application access information for the current user\n     * see `validateAppAccess` function for details\n     *\n     * @param clientId application client id\n     */\n    UserSession.prototype.validateAppAccess = function (clientId) {\n        return this.getToken(this.portal).then(function (token) {\n            return validateAppAccess(token, clientId);\n        });\n    };\n    UserSession.prototype.toJSON = function () {\n        return {\n            clientId: this.clientId,\n            refreshToken: this.refreshToken,\n            refreshTokenExpires: this.refreshTokenExpires,\n            username: this.username,\n            password: this.password,\n            token: this.token,\n            tokenExpires: this.tokenExpires,\n            portal: this.portal,\n            ssl: this.ssl,\n            tokenDuration: this.tokenDuration,\n            redirectUri: this.redirectUri,\n            refreshTokenTTL: this.refreshTokenTTL,\n        };\n    };\n    UserSession.prototype.serialize = function () {\n        return JSON.stringify(this);\n    };\n    /**\n     * For a \"Host\" app that embeds other platform apps via iframes, after authenticating the user\n     * and creating a UserSession, the app can then enable \"post message\" style authentication by calling\n     * this method.\n     *\n     * Internally this adds an event listener on window for the `message` event\n     *\n     * @param validChildOrigins Array of origins that are allowed to request authentication from the host app\n     */\n    UserSession.prototype.enablePostMessageAuth = function (validChildOrigins, win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        this._hostHandler = this.createPostMessageHandler(validChildOrigins);\n        win.addEventListener(\"message\", this._hostHandler, false);\n    };\n    /**\n     * For a \"Host\" app that has embedded other platform apps via iframes, when the host needs\n     * to transition routes, it should call `UserSession.disablePostMessageAuth()` to remove\n     * the event listener and prevent memory leaks\n     */\n    UserSession.prototype.disablePostMessageAuth = function (win) {\n        /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n        if (!win && window) {\n            win = window;\n        }\n        win.removeEventListener(\"message\", this._hostHandler, false);\n    };\n    /**\n     * Manually refreshes the current `token` and `tokenExpires`.\n     */\n    UserSession.prototype.refreshSession = function (requestOptions) {\n        // make sure subsequent calls to getUser() don't returned cached metadata\n        this._user = null;\n        if (this.username && this.password) {\n            return this.refreshWithUsernameAndPassword(requestOptions);\n        }\n        if (this.clientId && this.refreshToken) {\n            return this.refreshWithRefreshToken();\n        }\n        return Promise.reject(new ArcGISAuthError(\"Unable to refresh token.\"));\n    };\n    /**\n     * Determines the root of the ArcGIS Server or Portal for a given URL.\n     *\n     * @param url the URl to determine the root url for.\n     */\n    UserSession.prototype.getServerRootUrl = function (url) {\n        var root = cleanUrl(url).split(/\\/rest(\\/admin)?\\/services(?:\\/|#|\\?|$)/)[0];\n        var _a = root.match(/(https?:\\/\\/)(.+)/), match = _a[0], protocol = _a[1], domainAndPath = _a[2];\n        var _b = domainAndPath.split(\"/\"), domain = _b[0], path = _b.slice(1);\n        // only the domain is lowercased becasue in some cases an org id might be\n        // in the path which cannot be lowercased.\n        return \"\" + protocol + domain.toLowerCase() + \"/\" + path.join(\"/\");\n    };\n    /**\n     * Return a function that closes over the validOrigins array and\n     * can be used as an event handler for the `message` event\n     *\n     * @param validOrigins Array of valid origins\n     */\n    UserSession.prototype.createPostMessageHandler = function (validOrigins) {\n        var _this = this;\n        // return a function that closes over the validOrigins and\n        // has access to the credential\n        return function (event) {\n            // Note: do not use regex's here. validOrigins is an array so we're checking that the event's origin\n            // is in the array via exact match. More info about avoiding postMessave xss issues here\n            // https://jlajara.gitlab.io/web/2020/07/17/Dom_XSS_PostMessage_2.html#tipsbypasses-in-postmessage-vulnerabilities\n            if (validOrigins.indexOf(event.origin) > -1) {\n                var credential = _this.toCredential();\n                event.source.postMessage({ type: \"arcgis:auth:credential\", credential: credential }, event.origin);\n            }\n            else {\n                event.source.postMessage({\n                    type: \"arcgis:auth:rejected\",\n                    message: \"Rejected authentication request.\",\n                }, event.origin);\n            }\n        };\n    };\n    /**\n     * Validates that a given URL is properly federated with our current `portal`.\n     * Attempts to use the internal `trustedServers` cache first.\n     */\n    UserSession.prototype.getTokenForServer = function (url, requestOptions) {\n        var _this = this;\n        // requests to /rest/services/ and /rest/admin/services/ are both valid\n        // Federated servers may have inconsistent casing, so lowerCase it\n        var root = this.getServerRootUrl(url);\n        var existingToken = this.trustedServers[root];\n        if (existingToken &&\n            existingToken.expires &&\n            existingToken.expires.getTime() > Date.now()) {\n            return Promise.resolve(existingToken.token);\n        }\n        if (this._pendingTokenRequests[root]) {\n            return this._pendingTokenRequests[root];\n        }\n        this._pendingTokenRequests[root] = request(root + \"/rest/info\")\n            .then(function (response) {\n            if (response.owningSystemUrl) {\n                /**\n                 * if this server is not owned by this portal\n                 * bail out with an error since we know we wont\n                 * be able to generate a token\n                 */\n                if (!isFederated(response.owningSystemUrl, _this.portal)) {\n                    throw new ArcGISAuthError(url + \" is not federated with \" + _this.portal + \".\", \"NOT_FEDERATED\");\n                }\n                else {\n                    /**\n                     * if the server is federated, use the relevant token endpoint.\n                     */\n                    return request(response.owningSystemUrl + \"/sharing/rest/info\", requestOptions);\n                }\n            }\n            else if (response.authInfo &&\n                _this.trustedServers[root] !== undefined) {\n                /**\n                 * if its a stand-alone instance of ArcGIS Server that doesn't advertise\n                 * federation, but the root server url is recognized, use its built in token endpoint.\n                 */\n                return Promise.resolve({ authInfo: response.authInfo });\n            }\n            else {\n                throw new ArcGISAuthError(url + \" is not federated with any portal and is not explicitly trusted.\", \"NOT_FEDERATED\");\n            }\n        })\n            .then(function (response) {\n            return response.authInfo.tokenServicesUrl;\n        })\n            .then(function (tokenServicesUrl) {\n            // an expired token cant be used to generate a new token\n            if (_this.token && _this.tokenExpires.getTime() > Date.now()) {\n                return generateToken(tokenServicesUrl, {\n                    params: {\n                        token: _this.token,\n                        serverUrl: url,\n                        expiration: _this.tokenDuration,\n                        client: \"referer\",\n                    },\n                });\n                // generate an entirely fresh token if necessary\n            }\n            else {\n                return generateToken(tokenServicesUrl, {\n                    params: {\n                        username: _this.username,\n                        password: _this.password,\n                        expiration: _this.tokenDuration,\n                        client: \"referer\",\n                    },\n                }).then(function (response) {\n                    _this._token = response.token;\n                    _this._tokenExpires = new Date(response.expires);\n                    return response;\n                });\n            }\n        })\n            .then(function (response) {\n            _this.trustedServers[root] = {\n                expires: new Date(response.expires),\n                token: response.token,\n            };\n            delete _this._pendingTokenRequests[root];\n            return response.token;\n        });\n        return this._pendingTokenRequests[root];\n    };\n    /**\n     * Returns an unexpired token for the current `portal`.\n     */\n    UserSession.prototype.getFreshToken = function (requestOptions) {\n        var _this = this;\n        if (this.token && !this.tokenExpires) {\n            return Promise.resolve(this.token);\n        }\n        if (this.token &&\n            this.tokenExpires &&\n            this.tokenExpires.getTime() > Date.now()) {\n            return Promise.resolve(this.token);\n        }\n        if (!this._pendingTokenRequests[this.portal]) {\n            this._pendingTokenRequests[this.portal] = this.refreshSession(requestOptions).then(function (session) {\n                _this._pendingTokenRequests[_this.portal] = null;\n                return session.token;\n            });\n        }\n        return this._pendingTokenRequests[this.portal];\n    };\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `username` and\n     * `password`.\n     */\n    UserSession.prototype.refreshWithUsernameAndPassword = function (requestOptions) {\n        var _this = this;\n        var options = __assign({ params: {\n                username: this.username,\n                password: this.password,\n                expiration: this.tokenDuration,\n            } }, requestOptions);\n        return generateToken(this.portal + \"/generateToken\", options).then(function (response) {\n            _this._token = response.token;\n            _this._tokenExpires = new Date(response.expires);\n            return _this;\n        });\n    };\n    /**\n     * Refreshes the current `token` and `tokenExpires` with `refreshToken`.\n     */\n    UserSession.prototype.refreshWithRefreshToken = function (requestOptions) {\n        var _this = this;\n        if (this.refreshToken &&\n            this.refreshTokenExpires &&\n            this.refreshTokenExpires.getTime() < Date.now()) {\n            return this.refreshRefreshToken(requestOptions);\n        }\n        var options = __assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                grant_type: \"refresh_token\",\n            } }, requestOptions);\n        return fetchToken(this.portal + \"/oauth2/token\", options).then(function (response) {\n            _this._token = response.token;\n            _this._tokenExpires = response.expires;\n            return _this;\n        });\n    };\n    /**\n     * Exchanges an unexpired `refreshToken` for a new one, also updates `token` and\n     * `tokenExpires`.\n     */\n    UserSession.prototype.refreshRefreshToken = function (requestOptions) {\n        var _this = this;\n        var options = __assign({ params: {\n                client_id: this.clientId,\n                refresh_token: this.refreshToken,\n                redirect_uri: this.redirectUri,\n                grant_type: \"exchange_refresh_token\",\n            } }, requestOptions);\n        return fetchToken(this.portal + \"/oauth2/token\", options).then(function (response) {\n            _this._token = response.token;\n            _this._tokenExpires = response.expires;\n            _this._refreshToken = response.refreshToken;\n            _this._refreshTokenExpires = new Date(Date.now() + (_this.refreshTokenTTL - 1) * 60 * 1000);\n            return _this;\n        });\n    };\n    return UserSession;\n}());\nexport { UserSession };\n//# sourceMappingURL=UserSession.js.map","/**\n * Get a property out of a deeply nested object. Supports array indexing\n * and property matching.\n *\n * Examples:\n * ```js\n * getProp({a: {b: {c: 1}}}, \"a.b.c\") => 1\n * getProp({a: {b: {c: 1}}}, \"a.b.d\") => undefined\n * getProp({a: {b: {c: 1}}}, \"a.b\") => {c: 1}\n * getProp({a: {b: [1,2]}}, \"a.b[0]\") => 1\n * getProp({a: {b: {c: 1}, b2: { $use: \"a.b\"}}, \"a.b2\") => {c: 1}\n * getProp({a: [{key: \"x\", val:1}, {key: \"y\", val:3}]}, \"a[1]\") => {key: \"y\", val:3}\n * getProp({a: [{key: \"x\", val:1}, {key: \"y\", val:3}]}, \"a[1].val\") => 3\n * getProp({a: [{key: \"x\", val:1}, {key: \"y\", val:3}]}, \"a[findBy(key,y)].val\") => 3\n * getProp({a: [{key: \"x\", val:1}, {key: \"y\", val:3}]}, \"a[findBy(val,1)].key\") => \"x\"\n * ```\n */\nexport const getProp = (obj, path) => {\n    return path.split(\".\").reduce(function (prev, curr) {\n        const match = curr.match(/\\[(.*?)\\]$/);\n        if (match) {\n            const indexOrFnName = match[1];\n            const propName = curr.replace(match[0], \"\");\n            if (parseInt(indexOrFnName, 10) > -1) {\n                const idx = parseInt(indexOrFnName, 10);\n                // check that the array exists and that the index is valid\n                if (Array.isArray(prev[propName]) && prev[propName][idx]) {\n                    return prev[propName][idx];\n                }\n                else {\n                    return undefined;\n                }\n            }\n            else {\n                // we have an operation that we want to apply to the array\n                return applyOperation(prev[propName], indexOrFnName);\n            }\n        }\n        else {\n            if (prev && prev[curr] !== undefined) {\n                if (prev[curr] !== null && prev[curr].$use) {\n                    return getProp(obj, prev[curr].$use);\n                }\n                else {\n                    return prev[curr];\n                }\n            }\n            else {\n                return undefined;\n            }\n        }\n    }, obj);\n};\nfunction applyOperation(arr, operation) {\n    // split up the operation into the operationName and the arguments\n    // e.g. \"findBy(key,'projects')\" => [\"findBy\", \"key, 'projects'\"]\n    const parts = operation.split(\"(\");\n    // lots of guards...\n    if (!parts || parts.length !== 2)\n        return undefined;\n    let result;\n    const fnName = parts[0];\n    const args = parts[1]\n        .replace(\")\", \"\")\n        .split(\",\")\n        .map((p) => p.trim());\n    switch (fnName) {\n        case \"findBy\":\n            const prop = args[0];\n            let val;\n            if (isNumeric(args[1])) {\n                val = parseFloat(args[1]);\n            }\n            else {\n                val = args[1].replace(/'/g, \"\");\n            }\n            result = arr.find((p) => p[prop] === val);\n            break;\n        default:\n            result = undefined;\n    }\n    return result;\n}\nfunction isNumeric(n) {\n    return !isNaN(parseFloat(n));\n}\n//# sourceMappingURL=get-prop.js.map","/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { getProp } from \"./objects/get-prop\";\n/**\n * ```js\n * import { cloneObject } from \"@esri/hub-common\";\n * const original = { foo: \"bar\" }\n * const copy = cloneObject(original)\n * copy.foo // \"bar\"\n * copy === original // false\n * ```\n * Make a deep clone, including arrays. Does not handle functions!\n */\nexport function cloneObject(obj) {\n    let clone = {};\n    // first check array\n    if (Array.isArray(obj)) {\n        clone = obj.map(cloneObject);\n    }\n    else if (typeof obj === \"object\") {\n        for (const i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                const value = obj[i];\n                if (value != null && typeof value === \"object\") {\n                    if (value instanceof Date) {\n                        clone[i] = new Date(value.getTime());\n                    }\n                    else if (typeof Blob !== \"undefined\" && value instanceof Blob) {\n                        clone[i] = new Blob([value], { type: value.type });\n                    }\n                    else {\n                        clone[i] = cloneObject(value);\n                    }\n                }\n                else {\n                    clone[i] = value;\n                }\n            }\n        }\n    }\n    else {\n        clone = obj;\n    }\n    return clone;\n}\n/**\n * Given an array of objects, convert into an object, with each\n * entry assigned the key via the keyprop\n */\nexport function arrayToObject(arr, key) {\n    return arr.reduce((hash, entry) => {\n        hash[getProp(entry, key)] = entry;\n        return hash;\n    }, {});\n}\n/**\n * Given an object, convert into an array, with each\n * something or other\n */\nexport function objectToArray(obj, keyProp = \"id\") {\n    const arr = Object.keys(obj).reduce((acc, prop) => {\n        obj[prop][keyProp] = prop;\n        acc.push(cloneObject(obj[prop]));\n        return acc;\n    }, []);\n    return arr;\n}\n/**\n * Return an entry from an array by a property name\n */\nexport function findBy(arr, prop, value) {\n    if (!arr) {\n        return null;\n    }\n    const res = arr.reduce((acc, entry) => {\n        if (getProp(entry, prop) === value) {\n            acc = entry;\n        }\n        return acc;\n    }, null);\n    return res;\n}\n/**\n * Return a new array without the specified value.\n *\n * @export\n * @param {any[]} arr\n * @param {*} val value or object to remove\n * @returns {any[]} Array without the value\n */\nexport function without(arr, value) {\n    const res = arr.filter((entry) => entry !== value);\n    return res;\n}\n/**\n * Compose\n * adapted from: https://github.com/stoeffel/compose-function/blob/master/module/index.js\n */\nexport function compose(...fns) {\n    return fns.reduce((f, g) => (...args) => f(g(...args)));\n}\n/**\n * Return a random number, prefixed with a string. Used for unique identifiers that do not require\n * the rigor of a full UUID - i.e. node id's, process ids etc.\n * @param prefix String to prefix the random number with so the result is a valid javascript property\n */\nexport function createId(prefix = \"i\") {\n    // prepend some char so it's always a valid dotable property name\n    // get a random number, convert to base 36 representation, then grab chars 2-8\n    return `${prefix}${Math.random().toString(36).substr(2, 8)}`;\n}\n/**\n * Append or replace a value on an object, using a specified key, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: object that is passed in is cloned before the property is appended.\n *\n * Allows for code like:\n *\n * ```js\n * let model = {\n *  item: {\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n *\n * // Let's extract some details into an object.\n * const summary = [\n *  'item.title',\n *  'item.description',\n *  'item.missingProp',\n *  'data.parcelLayer.primaryField'].reduce((acc, prop) => {\n *   // create the property name... you could do this however...\n *   let propName = prop.split('.').reverse()[0];\n *   return maybeAdd(propName, getProp(model, key), acc);\n * }, {});\n *\n * // summary =>\n * // {\n * //   title: 'some example object',\n * //   description: 'this is some longer text',\n * //   primaryField: 'PIN'\n * // }\n * ```\n * @param key - key to use when appending to the object\n * @param val - the possibly null value\n * @param target - the object to update\n */\nexport function maybeAdd(key, val, target) {\n    // see if we got something...\n    if (val !== null && val !== undefined) {\n        target = cloneObject(target);\n        // attach using the key\n        target[key] = val;\n    }\n    return target;\n}\n/**\n * Append a value to an array, if the value is not null.\n * This is a very useful companion to the [getProp()](../getProp/) utility.\n *\n * Note: the array that is passed in is cloned before being appended to.\n *\n * Allows for code like:\n * ```js\n *  // example object\n * let model = {\n *  item: {\n *    id: 'c00',\n *    title: 'some example object',\n *    description: 'this is some longer text',\n *    type: 'Web Map',\n *    properties: {\n *      sourceId: '3ef'\n *    }\n *  },\n *  data: {\n *    theme: 'orange',\n *    parcelLayer: {\n *      itemId: '7ca',\n *      primaryField: 'PIN'\n *    }\n *  }\n * };\n * // lets pluck some id's into an array...\n * maybePush(getProp(model, 'item.properties.sourceId'), []);\n * // > ['3ef']\n *\n * // now try to get a value from a property that is missing...\n * maybePush(getProp(obj, 'item.properties.childId'), []);\n * // > []\n *\n * // easily pluck values via property paths\n * const summary = [\n *  'item.id',\n *  'item.properties.sourceId',\n *  'item.properties.childId',\n *  'data.parcelLayer.itemId'].reduce((acc, prop) => {\n *   return maybePush(getProp(model, key), acc);\n * }, []);\n *\n * // summary => ['c00', '3ef', '7ca']\n *\n * ```\n *\n * @param val - the possibly null value\n * @param target - the array to add the value to\n */\nexport function maybePush(val, target) {\n    if (val !== null && val !== undefined) {\n        // create a clone because mutation makes us sad...\n        target = cloneObject(target);\n        target.push(val);\n    }\n    return target;\n}\n/**\n * Convert a string to camelCase\n *\n * @export\n * @param {string} value\n * @returns {string} camelCased string\n */\nexport function camelize(value) {\n    // lower case the whole thing to start...\n    value = value.toLowerCase();\n    // strip out any/all special chars...\n    value = value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \" \");\n    // Hoisted from EmberJS (MIT License)\n    // https://github.com/emberjs/ember.js/blob/v2.0.1/packages/ember-runtime/lib/system/string.js#L23-L27\n    const STRING_CAMELIZE_REGEXP_1 = /(\\-|\\_|\\.|\\s)+(.)?/g;\n    const STRING_CAMELIZE_REGEXP_2 = /(^|\\/)([A-Z])/g;\n    return value\n        .replace(STRING_CAMELIZE_REGEXP_1, function (match, separator, chr) {\n        return chr ? chr.toUpperCase() : \"\";\n    })\n        .replace(STRING_CAMELIZE_REGEXP_2, function (match, separator, chr) {\n        return match.toLowerCase();\n    });\n}\n/**\n * Determines if a value is unique in an array\n * Allows for code like:\n *\n * ```js\n * const ary = [ 1, 2, 3, 3, 4, 5, 1 ];\n *\n * const result = ary.filter(unique);\n *\n * result => [ 1, 2, 3, 4, 5 ]\n * ```\n * @param value - the value to search for\n * @param index - the index of the searched value\n * @param ary - the array to search\n * @returns {boolean} - indicating if the value is unique in the array\n */\nexport function unique(value, index, ary) {\n    return ary.indexOf(value) === index;\n}\n/**\n * Return array of unique objects, based on a deep property value\n *  Note: Property you compare on should be a primative type\n * @export\n * @template T\n * @param {T[]} arr\n * @param {string} prop\n * @return {*}  {T[]}\n */\nexport function uniqueBy(arr, prop) {\n    return arr.reduce((acc, entry) => {\n        const nameMatches = (e) => getProp(e, prop) === getProp(entry, prop);\n        return maybePush(acc.find(nameMatches) ? null : entry, acc);\n    }, []);\n}\n/**\n * Return last element of an array\n *\n * @export\n * @template T\n * @param {T[]} arr\n * @return {*}  {T}\n */\nexport function last(arr) {\n    return arr[arr.length - 1];\n}\n/**\n * Filter an array by a deep property value\n *\n * @export\n * @template T\n * @param {T[]} arr\n * @param {string} prop\n * @param {unknown} val\n * @return {*}  {T[]}\n */\nexport function filterBy(arr, prop, val) {\n    return arr.filter((entry) => getProp(entry, prop) === val);\n}\n/**\n * Extends the target object with props from the source object, overwriting identically named\n * props in target with those from source, ignoring null and undefined values; similar to $.extend.\n * Performs a deep extend by default, unless deep = false is passed as the third arg.\n *\n * @param target - the object that will take props from source\n * @param source - the object from which to take props\n * @param deep - whether or not to perform a deep (recursive) extend of source\n */\nexport function extend(target, source, deep = true) {\n    const extended = cloneObject(target);\n    return Object.keys(source).reduce((obj, prop) => {\n        if (source[prop] !== null && source[prop] !== undefined) {\n            const value = cloneObject(source[prop]);\n            if (Array.isArray(value)) {\n                // check for arrays, since array is type object\n                obj[prop] = value;\n            }\n            else if (deep && typeof value === \"object\") {\n                obj[prop] = extend(obj[prop] || {}, value, deep);\n            }\n            else {\n                obj[prop] = value;\n            }\n        }\n        return obj;\n    }, extended);\n}\n/**\n * Add number of days to a given date\n *\n * @export\n * @param {string} date\n * @param {number} numOfDays\n * @returns {string} date string with numOfDays added to the given date\n */\nexport function addDays(date, numOfDays) {\n    try {\n        const given = new Date(date);\n        const dateString = new Date(given.setDate(given.getDate() + numOfDays)).toISOString();\n        return dateString.split(\"T\")[0];\n    }\n    catch (e) {\n        throw new Error(\"Invalid Date\");\n    }\n}\n/**\n * Returns an array with arrays of the given size.\n *\n * @param arr Array to split\n * @param size Size of every group\n */\nexport function chunkArray(arr, size) {\n    const results = [];\n    let index = 0;\n    while (index < arr.length) {\n        results.push(arr.slice(index, index + size));\n        index += size;\n    }\n    return results;\n}\n/**\n * Determine if a value is null or undefined\n * @param value anything\n * @returns\n */\nexport const isNil = (value) => value == null;\n/**\n * Upper case first letter (only) of a string\n * @param word\n * @returns Word\n */\nexport const capitalize = (word) => {\n    const chars = Array.from(word);\n    // account for the empty string\n    if (chars.length) {\n        chars[0] = chars[0].toUpperCase();\n    }\n    return chars.join(\"\");\n};\n/**\n * An IE-compatible stand-in for Javascript's [array.flat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat)\n * @param arr the array\n * @returns an array\n */\nexport function flattenArray(arr) {\n    return arr.reduce((acc, val) => acc.concat(val), []);\n}\n//# sourceMappingURL=util.js.map","import { getProp } from \"./get-prop\";\n/**\n * Gets the value of a property from an object with a\n * default if that prop is undefined\n * @param obj\n * @param prop\n * @param def\n */\nexport function getWithDefault(obj, prop, def) {\n    const res = getProp(obj, prop);\n    return res !== undefined ? res : def;\n}\n//# sourceMappingURL=get-with-default.js.map","\"use strict\";\n\n/**\n * Implementation of atob() according to the HTML and Infra specs, except that\n * instead of throwing INVALID_CHARACTER_ERR we return null.\n */\nfunction atob(data) {\n  if (arguments.length === 0) {\n    throw new TypeError(\"1 argument required, but only 0 present.\");\n  }\n\n  // Web IDL requires DOMStrings to just be converted using ECMAScript\n  // ToString, which in our case amounts to using a template literal.\n  data = `${data}`;\n  // \"Remove all ASCII whitespace from data.\"\n  data = data.replace(/[ \\t\\n\\f\\r]/g, \"\");\n  // \"If data's length divides by 4 leaving no remainder, then: if data ends\n  // with one or two U+003D (=) code points, then remove them from data.\"\n  if (data.length % 4 === 0) {\n    data = data.replace(/==?$/, \"\");\n  }\n  // \"If data's length divides by 4 leaving a remainder of 1, then return\n  // failure.\"\n  //\n  // \"If data contains a code point that is not one of\n  //\n  // U+002B (+)\n  // U+002F (/)\n  // ASCII alphanumeric\n  //\n  // then return failure.\"\n  if (data.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(data)) {\n    return null;\n  }\n  // \"Let output be an empty byte sequence.\"\n  let output = \"\";\n  // \"Let buffer be an empty buffer that can have bits appended to it.\"\n  //\n  // We append bits via left-shift and or.  accumulatedBits is used to track\n  // when we've gotten to 24 bits.\n  let buffer = 0;\n  let accumulatedBits = 0;\n  // \"Let position be a position variable for data, initially pointing at the\n  // start of data.\"\n  //\n  // \"While position does not point past the end of data:\"\n  for (let i = 0; i < data.length; i++) {\n    // \"Find the code point pointed to by position in the second column of\n    // Table 1: The Base 64 Alphabet of RFC 4648. Let n be the number given in\n    // the first cell of the same row.\n    //\n    // \"Append to buffer the six bits corresponding to n, most significant bit\n    // first.\"\n    //\n    // atobLookup() implements the table from RFC 4648.\n    buffer <<= 6;\n    buffer |= atobLookup(data[i]);\n    accumulatedBits += 6;\n    // \"If buffer has accumulated 24 bits, interpret them as three 8-bit\n    // big-endian numbers. Append three bytes with values equal to those\n    // numbers to output, in the same order, and then empty buffer.\"\n    if (accumulatedBits === 24) {\n      output += String.fromCharCode((buffer & 0xff0000) >> 16);\n      output += String.fromCharCode((buffer & 0xff00) >> 8);\n      output += String.fromCharCode(buffer & 0xff);\n      buffer = accumulatedBits = 0;\n    }\n    // \"Advance position by 1.\"\n  }\n  // \"If buffer is not empty, it contains either 12 or 18 bits. If it contains\n  // 12 bits, then discard the last four and interpret the remaining eight as\n  // an 8-bit big-endian number. If it contains 18 bits, then discard the last\n  // two and interpret the remaining 16 as two 8-bit big-endian numbers. Append\n  // the one or two bytes with values equal to those one or two numbers to\n  // output, in the same order.\"\n  if (accumulatedBits === 12) {\n    buffer >>= 4;\n    output += String.fromCharCode(buffer);\n  } else if (accumulatedBits === 18) {\n    buffer >>= 2;\n    output += String.fromCharCode((buffer & 0xff00) >> 8);\n    output += String.fromCharCode(buffer & 0xff);\n  }\n  // \"Return output.\"\n  return output;\n}\n/**\n * A lookup table for atob(), which converts an ASCII character to the\n * corresponding six-bit number.\n */\n\nconst keystr =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction atobLookup(chr) {\n  const index = keystr.indexOf(chr);\n  // Throw exception if character is not in the lookup string; should not be hit in tests\n  return index < 0 ? undefined : index;\n}\n\nmodule.exports = atob;\n","\"use strict\";\n\n/**\n * btoa() as defined by the HTML and Infra specs, which mostly just references\n * RFC 4648.\n */\nfunction btoa(s) {\n  if (arguments.length === 0) {\n    throw new TypeError(\"1 argument required, but only 0 present.\");\n  }\n\n  let i;\n  // String conversion as required by Web IDL.\n  s = `${s}`;\n  // \"The btoa() method must throw an \"InvalidCharacterError\" DOMException if\n  // data contains any character whose code point is greater than U+00FF.\"\n  for (i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 255) {\n      return null;\n    }\n  }\n  let out = \"\";\n  for (i = 0; i < s.length; i += 3) {\n    const groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = s.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n    if (s.length > i + 1) {\n      groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (s.length > i + 2) {\n      groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += btoaLookup(groupsOfSix[j]);\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Lookup table for btoa(), which converts a six-bit number into the\n * corresponding ASCII character.\n */\nconst keystr =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction btoaLookup(index) {\n  if (index >= 0 && index < 64) {\n    return keystr[index];\n  }\n\n  // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n  return undefined;\n}\n\nmodule.exports = btoa;\n","\"use strict\";\n\nconst atob = require(\"./lib/atob\");\nconst btoa = require(\"./lib/btoa\");\n\nmodule.exports = {\n  atob,\n  btoa\n};\n","import { atob, btoa } from \"abab\";\n// these were copied from:\n// https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\nfunction base64ToBytes(base64) {\n    const binString = atob(base64);\n    return Uint8Array.from(binString, (m) => m.codePointAt(0));\n}\nfunction bytesToBase64(bytes) {\n    const binString = Array.from(bytes, (x) => String.fromCodePoint(x)).join(\"\");\n    return btoa(binString);\n}\n/**\n * Base 64 encoding for strings that may include unicode characters\n * @param data\n * @returns base\n */\nexport function unicodeToBase64(data) {\n    return bytesToBase64(new TextEncoder().encode(data));\n}\n/**\n * Base 64 decoding for strings that may include unicode characters\n * @param data\n * @returns\n */\nexport function base64ToUnicode(data) {\n    return new TextDecoder().decode(base64ToBytes(data));\n}\n//# sourceMappingURL=encoding.js.map","/* tslint:disable no-console */\n/**\n * Enum for Logger Levels\n */\nexport var Level;\n(function (Level) {\n    Level[Level[\"all\"] = 0] = \"all\";\n    Level[Level[\"debug\"] = 1] = \"debug\";\n    Level[Level[\"info\"] = 2] = \"info\";\n    Level[Level[\"warn\"] = 3] = \"warn\";\n    Level[Level[\"error\"] = 4] = \"error\";\n    Level[Level[\"off\"] = 5] = \"off\";\n})(Level || (Level = {}));\n/**\n * ```js\n * import { Logger, Level } from '@esri/hub-common'\n * ```\n * Functions share the console interface\n * ```js\n * Logger.log('My Message');\n * Logger.warn('Watch out!', { threat: 'Charizard' });\n * // etc, etc\n * ```\n * Available logging levels are specified in the Level enum. The hierarchy is as follows:\n * ```\n * off > error > warn > info > debug > all\n * ```\n * Logger only sends messages whose level is greater than or equal to the global log level\n * ```js\n * // Global level is 'warn'\n * Logger.info('This message won't log');\n * Logger.error('But this one will!');\n * ```\n * Logger's default level is 'off', so set desired level before use\n * ```js\n * Logger.setLogLevel(Level.all);\n * ```\n */\nexport class Logger {\n    /**\n     * Sets the global log level\n     * @param {Level} level\n     */\n    static setLogLevel(level) {\n        this.logLevel = level;\n    }\n    /**\n     * Logs to debug if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static log(message, ...objects) {\n        if (this.isLevelPermitted(Level.debug)) {\n            console.log(message, ...objects);\n        }\n    }\n    /**\n     * Logs to debug if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static debug(message, ...objects) {\n        if (this.isLevelPermitted(Level.debug)) {\n            console.debug(message, ...objects);\n        }\n    }\n    /**\n     * Logs to info if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static info(message, ...objects) {\n        if (this.isLevelPermitted(Level.info)) {\n            console.info(message, ...objects);\n        }\n    }\n    /**\n     * Logs to warn if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static warn(message, ...objects) {\n        if (this.isLevelPermitted(Level.warn)) {\n            console.warn(message, ...objects);\n        }\n    }\n    /**\n     * Logs to error if level is enabled\n     * @param {string} message\n     * @param {...*} objects additional objects to log (optional rest parameter)\n     */\n    static error(message, ...objects) {\n        if (this.isLevelPermitted(Level.error)) {\n            console.error(message, ...objects);\n        }\n    }\n    static isLevelPermitted(level) {\n        return this.logLevel <= level;\n    }\n}\nLogger.logLevel = Level.off;\n//# sourceMappingURL=logger.js.map","export function getEnvironmentFromPortalUrl(portalUrl) {\n    // default to enterprise because we don't know the patterns for that\n    // other than it's _not_ arcgis.com\n    let env = \"enterprise\";\n    // if we're on arcgis.com, we can assume prod...\n    if (portalUrl.includes(\"arcgis.com\")) {\n        env = \"production\";\n    }\n    // unless we're on a subdomain which suggest we might be in a dev or qa environment\n    if (portalUrl.includes(\"qaext.arcgis.com\") ||\n        portalUrl.includes(\"mapsqa.arcgis.com\")) {\n        env = \"qaext\";\n    }\n    if (portalUrl.includes(\"devext.arcgis.com\") ||\n        portalUrl.includes(\"mapsdev.arcgis.com\")) {\n        env = \"devext\";\n    }\n    return env;\n}\n//# sourceMappingURL=getEnvironmentFromPortalUrl.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nexport function getPortalUrl(requestOptions = {}) {\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication &&\n        typeof requestOptions.authentication !== \"string\") {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n//# sourceMappingURL=get-portal-url.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\n/**\n * Get information about a user. This method has proven so generically useful that you can also call {@linkcode ArcGISIdentityManager.getUser}.\n *\n * ```js\n * import { getUser } from '@esri/arcgis-rest-portal';\n * //\n * getUser(\"jsmith\")\n *   .then(response)\n * // => { firstName: \"John\", lastName: \"Smith\",tags: [\"GIS Analyst\", \"City of Redlands\"] }\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nexport function getUser(requestOptions) {\n    let url;\n    let options = { httpMethod: \"GET\" };\n    // if a username is passed, assume ArcGIS Online\n    if (typeof requestOptions === \"string\") {\n        url = `https://www.arcgis.com/sharing/rest/community/users/${requestOptions}`;\n    }\n    else {\n        // if an authenticated session is passed, default to that user/portal unless another username is provided manually\n        const username = requestOptions.username || requestOptions.authentication.username;\n        url = `${getPortalUrl(requestOptions)}/community/users/${encodeURIComponent(username)}`;\n        options = Object.assign(Object.assign({}, requestOptions), options);\n    }\n    // send the request\n    return request(url, options);\n}\n//# sourceMappingURL=get-user.js.map","/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"./get-portal-url.js\";\n/**\n * Get the portal\n * @param requestOptions\n */\nexport function getSelf(requestOptions) {\n    // just delegate to getPortal w/o an id\n    return getPortal(null, requestOptions);\n}\n/**\n * Fetch information about the specified portal by id. If no id is passed, portals/self will be called.\n *\n * If you intend to request a portal by id and it is different from the portal specified by options.authentication, you must also pass options.portal.\n *\n *  ```js\n * import { getPortal } from \"@esri/arcgis-rest-portal\";\n * //\n * getPortal()\n * getPortal(\"fe8\")\n * getPortal(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n *\n * @param id\n * @param requestOptions\n */\nexport function getPortal(id, requestOptions) {\n    // construct the search url\n    const idOrSelf = id ? id : \"self\";\n    const url = `${getPortalUrl(requestOptions)}/portals/${idOrSelf}`;\n    // default to a GET request\n    const options = Object.assign({ httpMethod: \"GET\" }, requestOptions);\n    // send the request\n    return request(url, options);\n}\n//# sourceMappingURL=get-portal.js.map","/**\n * Cross-walk from a portalUrl to the corresponding Hub API Url\n *\n * If the passed url is not recognized, then this will return `undefined`\n * @param portalUrl\n * @returns\n */\nexport function getHubApiFromPortalUrl(portalUrl) {\n    let result;\n    if (portalUrl.match(/(qaext|\\.mapsqa)\\.arcgis.com/)) {\n        result = \"https://hubqa.arcgis.com\";\n    }\n    else if (portalUrl.match(/(devext|\\.mapsdevext)\\.arcgis.com/)) {\n        result = \"https://hubdev.arcgis.com\";\n    }\n    else if (portalUrl.match(/(www|\\.maps)\\.arcgis.com/)) {\n        result = \"https://hub.arcgis.com\";\n    }\n    return result;\n}\n//# sourceMappingURL=getHubApiFromPortalUrl.js.map","/**\n * Given an org url, get the portal base url\n *\n * i.e. https://myorg.maps.arcgis.com will return https://www.arcgis.com\n *\n * @param orgUrl\n * @returns\n */\nexport function getPortalBaseFromOrgUrl(orgUrl) {\n    let result = orgUrl;\n    if (orgUrl.match(/(qaext|\\.mapsqa)\\.arcgis.com/)) {\n        result = \"https://qaext.arcgis.com\";\n    }\n    else if (orgUrl.match(/(devext|\\.mapsdevext)\\.arcgis.com/)) {\n        result = \"https://devext.arcgis.com\";\n    }\n    else {\n        /* istanbul ignore else */\n        if (orgUrl.match(/(www|\\.maps)\\.arcgis.com/)) {\n            result = \"https://www.arcgis.com\";\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=getPortalBaseFromOrgUrl.js.map","import { getProp, getWithDefault } from \"./objects\";\nimport { getEnvironmentFromPortalUrl } from \"./utils/getEnvironmentFromPortalUrl\";\n/**\n * Hash of Hub API end points so updates\n * are centralized\n */\nconst hubApiEndpoints = {\n    domains: \"/api/v3/domains\",\n    search: \"/api/v3/datasets\",\n    discussions: \"/api/discussions/v1\",\n};\n/**\n * Abstraction that holds a `UserSession`, along with\n * getters to streamline access to various platform\n * urls, and common constructs like `IRequestOptions`,\n * `IUserRequestOptions` etc.\n *\n * Instances are intended to be immutable, but this is not directly enforced.\n *\n * In most circumstances, this class should be created by\n * the ArcGISContextManager class.\n */\nexport class ArcGISContext {\n    /**\n     * Create a new instance of `ArcGISContext`.\n     *\n     * @param opts\n     */\n    constructor(opts) {\n        this._portalUrl = \"https://www.arcgis.com\";\n        this.id = opts.id;\n        this._portalUrl = opts.portalUrl;\n        this._hubUrl = opts.hubUrl;\n        this._systemStatus = opts.systemStatus;\n        this._serviceStatus = opts.serviceStatus;\n        if (opts.authentication) {\n            this._authentication = opts.authentication;\n        }\n        if (opts.portalSelf) {\n            this._portalSelf = opts.portalSelf;\n        }\n        if (opts.currentUser) {\n            this._currentUser = opts.currentUser;\n        }\n        if (opts.properties) {\n            this._properties = opts.properties;\n        }\n    }\n    /**\n     * Return the UserSession if authenticated\n     */\n    get session() {\n        return this._authentication;\n    }\n    /**\n     * Return boolean indicating if authenticatio is present\n     */\n    get isAuthenticated() {\n        return !!this._authentication;\n    }\n    /**\n     * Is the users org in the alpha orgs list?\n     * Alpha orgs are passed in via properties.alphaOrgs\n     */\n    get isAlphaOrg() {\n        var _a, _b;\n        let result = false;\n        const orgs = ((_a = this._properties) === null || _a === void 0 ? void 0 : _a.alphaOrgs) || [];\n        const orgId = (_b = this._portalSelf) === null || _b === void 0 ? void 0 : _b.id;\n        if (orgs.length && orgId) {\n            result = orgs.includes(orgId);\n        }\n        return result;\n    }\n    /**\n     * Is the users org in the beta orgs list?\n     * Beta orgs are passed in via properties.betaOrgs\n     */\n    get isBetaOrg() {\n        var _a, _b;\n        let result = false;\n        const orgs = ((_a = this._properties) === null || _a === void 0 ? void 0 : _a.betaOrgs) || [];\n        const orgId = (_b = this._portalSelf) === null || _b === void 0 ? void 0 : _b.id;\n        if (orgs.length && orgId) {\n            result = orgs.includes(orgId);\n        }\n        return result;\n    }\n    /**\n     * Return the HubEnvironment of the current context\n     */\n    get environment() {\n        return getEnvironmentFromPortalUrl(this._portalUrl);\n    }\n    /**\n     * Return `IUserRequestOptions`, which is used for REST-JS\n     * functions which require authentication information.\n     *\n     * If context is not authenticated, this function will throw\n     */\n    get userRequestOptions() {\n        if (this.isAuthenticated) {\n            return {\n                authentication: this._authentication,\n                portal: this.sharingApiUrl,\n            };\n        }\n    }\n    /**\n     * Return `IRequestOptions`, which is used by REST-JS functions\n     * which *may* use authentication information if provided.\n     *\n     * If context is not authenticated, this function just returns\n     * the `portal` property, which informs REST-JS what Sharing API\n     * instance to use (i.e. AGO, Enterprise etc)\n     */\n    get requestOptions() {\n        let ro = {\n            portal: this.sharingApiUrl,\n        };\n        if (this.isAuthenticated) {\n            ro = {\n                authentication: this._authentication,\n                portal: this.sharingApiUrl,\n            };\n        }\n        return ro;\n    }\n    /**\n     * Return a `IHubRequestOptions` object\n     */\n    get hubRequestOptions() {\n        // We may add more logic around what is returned in some corner cases\n        return {\n            authentication: this.session,\n            isPortal: this.isPortal,\n            portalSelf: this.portal,\n            hubApiUrl: this.hubUrl,\n            portal: this.sharingApiUrl,\n        };\n    }\n    /**\n     * Return the portal url i.e. https://www.arcgis.com\n     *\n     * If authenticated @ ArcGIS Online, it will return\n     * the https://org.env.arcgis.com\n     *\n     * If authenticated @ ArcGIS Enterprise, it will return\n     * https://{portalHostname}/{webadaptor}\n     */\n    get portalUrl() {\n        if (this.isAuthenticated) {\n            if (this.isPortal || !this._portalSelf.urlKey) {\n                return `https://${this._portalSelf.portalHostname}`;\n            }\n            else {\n                return `https://${this._portalSelf.urlKey}.${this._portalSelf.customBaseUrl}`;\n            }\n        }\n        else {\n            return this._portalUrl;\n        }\n    }\n    /**\n     * Returns the current user's hub-home url. If not authenticated,\n     * returns the Hub Url. If portal, returns undefined\n     */\n    get hubHomeUrl() {\n        if (this.isPortal) {\n            return undefined;\n        }\n        else {\n            if (this.isAuthenticated) {\n                const hubHostname = this._hubUrl.replace(\"https://\", \"\");\n                return `https://${this._portalSelf.urlKey}.${hubHostname}`;\n            }\n            else {\n                return this._hubUrl;\n            }\n        }\n    }\n    /**\n     * Returns the current user's Hub License\n     */\n    get hubLicense() {\n        if (this.isPortal) {\n            return \"enterprise-sites\";\n        }\n        else {\n            if (this.hubEnabled) {\n                return \"hub-premium\";\n            }\n            else {\n                return \"hub-basic\";\n            }\n        }\n    }\n    /**\n     * Returns the current hub system status information\n     * TODO: Remove with Capabilities\n     */\n    get systemStatus() {\n        // tslint:disable-next-line: no-console\n        console.warn(`DEPRECATED: context.systemStatus is deprecated use context.serviceStatus instead`);\n        return this._systemStatus;\n    }\n    /**\n     * Returns the current hub service status information\n     */\n    get serviceStatus() {\n        return this._serviceStatus;\n    }\n    /**\n     * Returns the url to the sharing api composed from portalUrl\n     * i.e. https://myorg.maps.arcgis.com/sharing/rest\n     */\n    get sharingApiUrl() {\n        return `${this.portalUrl}/sharing/rest`;\n    }\n    /**\n     * Returns the Hub url, based on the portalUrl\n     *\n     * For ArcGIS Enterprise this will return `undefined`\n     */\n    get hubUrl() {\n        return this._hubUrl;\n    }\n    /**\n     * Returns boolean indicating if the backing system\n     * is ArcGIS Enterprise (formerly ArcGIS Portal) or not\n     */\n    get isPortal() {\n        return this._portalSelf\n            ? this._portalSelf.isPortal\n            : this._portalUrl.indexOf(\"arcgis.com\") === -1;\n    }\n    /**\n     * Returns the discussions API URL\n     */\n    get discussionsServiceUrl() {\n        if (this._hubUrl) {\n            return `${this._hubUrl}${hubApiEndpoints.discussions}`;\n        }\n    }\n    /**\n     * Returns the Hub Search API URL\n     */\n    get hubSearchServiceUrl() {\n        if (this._hubUrl) {\n            return `${this._hubUrl}${hubApiEndpoints.search}`;\n        }\n    }\n    /**\n     * Returns Hub Domain Service URL\n     */\n    get domainServiceUrl() {\n        if (this._hubUrl) {\n            return `${this._hubUrl}${hubApiEndpoints.domains}`;\n        }\n    }\n    /**\n     * Returns the Events configuration object from portal/self\n     *\n     * `{serviceId: '3ef..', publicViewId: 'bc3...'}`\n     */\n    get eventsConfig() {\n        if (this._portalSelf) {\n            return getProp(this._portalSelf, \"portalProperties.hub.settings.events\");\n        }\n    }\n    /**\n     * Returns boolean indicating if the current user\n     * belongs to an organization that has licensed\n     * ArcGIS Hub\n     */\n    get hubEnabled() {\n        return getWithDefault(this._portalSelf, \"portalProperties.hub.enabled\", false);\n    }\n    /**\n     * Return the Hub Community Org Id, if defined\n     */\n    get communityOrgId() {\n        if (this._portalSelf) {\n            return getProp(this._portalSelf, \"portalProperties.hub.settings.communityOrg.orgId\");\n        }\n    }\n    /**\n     * Returns the Hub Community Org Hostname, if defined\n     *\n     * i.e. c-org.maps.arcgis.com\n     */\n    get communityOrgHostname() {\n        if (this._portalSelf) {\n            return getProp(this._portalSelf, \"portalProperties.hub.settings.communityOrg.portalHostname\");\n        }\n    }\n    /**\n     * Returns the Hub Community Org url\n     *\n     * i.e. https://c-org.maps.arcgis.com\n     */\n    get communityOrgUrl() {\n        if (this.communityOrgHostname) {\n            return `https://${this.communityOrgHostname}`;\n        }\n    }\n    /**\n     * Returns the hash of helper services from portal self\n     */\n    get helperServices() {\n        if (this._portalSelf) {\n            return this._portalSelf.helperServices;\n        }\n    }\n    /**\n     * Returns the current user as IUser\n     */\n    get currentUser() {\n        return this._currentUser;\n    }\n    /**\n     * Returns the portal object as IPortal\n     */\n    get portal() {\n        return this._portalSelf;\n    }\n    /**\n     * Return the properties hash that was passed in.\n     * Useful for app-specific context such as the active\n     * Site for ArcGIS Hub\n     */\n    get properties() {\n        return this._properties;\n    }\n}\n//# sourceMappingURL=ArcGISContext.js.map","import { getSelf, getUser } from \"@esri/arcgis-rest-portal\";\nimport { UserSession } from \"@esri/arcgis-rest-auth\";\nimport { ArcGISContext, } from \"./ArcGISContext\";\nimport { getHubApiFromPortalUrl } from \"./urls/getHubApiFromPortalUrl\";\nimport { getPortalBaseFromOrgUrl } from \"./urls/getPortalBaseFromOrgUrl\";\nimport { Level, Logger } from \"./utils/logger\";\nimport { cloneObject } from \"./util\";\nimport { base64ToUnicode, unicodeToBase64 } from \"./utils/encoding\";\n/**\n * The manager exposes context (`IArcGISContext`), which combines a `UserSession` with\n * the `portal/self` and `user/self` responses to provide a central lookup for platform\n * information, api urls, and other useful properties for developers such as IRequestOptions\n * IUserRequestOptions, IHubRequestOptions etc.\n *\n * The context is exposed on gthe `.context` property, and as the authentication changes\n * the `.context` is re-created. This is done to allow web frameworks to watch for\n * changes on that single property, instead of having to leverage observers or events\n * for change detection.\n *\n * Please see the [ArcGISContext Guide](/hub.js/guides/context) for additional information.\n *\n */\nexport class ArcGISContextManager {\n    /**\n     * Private constructor. Use `ArcGISContextManager.create(...)` to\n     * instantiate an instance\n     * @param opts\n     */\n    constructor(opts) {\n        this._portalUrl = \"https://www.arcgis.com\";\n        this._logLevel = Level.error;\n        // Having a unique id makes debugging easier\n        this.id = new Date().getTime();\n        if (opts.logLevel) {\n            this._logLevel = opts.logLevel;\n        }\n        Logger.setLogLevel(this._logLevel);\n        Logger.debug(`ArcGISContextManager:ctor: Creating ${this.id}`);\n        if (opts.properties) {\n            this._properties = opts.properties;\n        }\n        if (opts.authentication) {\n            this._authentication = opts.authentication;\n            this._portalUrl = this._authentication.portal.replace(\"/sharing/rest\", \"\");\n            this._hubUrl = getHubApiFromPortalUrl(this._portalUrl);\n        }\n        else if (opts.portalUrl) {\n            this._portalUrl = opts.portalUrl;\n            this._hubUrl = getHubApiFromPortalUrl(this._portalUrl);\n        }\n        else {\n            this._hubUrl = getHubApiFromPortalUrl(this._portalUrl);\n        }\n        if (opts.portal) {\n            this._portalSelf = cloneObject(opts.portal);\n        }\n        if (opts.currentUser) {\n            this._currentUser = cloneObject(opts.currentUser);\n        }\n        // TODO: Remove with Capabilities\n        if (opts.systemStatus) {\n            this._systemStatus = opts.systemStatus;\n        }\n        if (opts.serviceStatus) {\n            this._serviceStatus = opts.serviceStatus;\n        }\n    }\n    /**\n     * Used to create a new instance of the ArcGISContext class.\n     *\n     * ```js\n     * const ctxMgr = await ArcGISContextManager.create();\n     * ```\n     *\n     * @param opts\n     * @returns\n     */\n    static async create(opts = {}) {\n        const ctx = new ArcGISContextManager(opts);\n        await ctx.initialize();\n        return ctx;\n    }\n    /**\n     * Create a new instance of the ArcGISContextManager from a serialized\n     * string. This is useful when you want to store the context in a\n     * browser's local storage or server side session.\n     * @param serializedContext\n     * @returns\n     */\n    static async deserialize(serializedContext) {\n        const decoded = base64ToUnicode(serializedContext);\n        const state = JSON.parse(decoded);\n        // create opts and populate from state\n        const opts = {\n            portalUrl: state.portalUrl,\n        };\n        if (state.session) {\n            // re-create the session\n            const userSession = UserSession.deserialize(state.session);\n            // if the session is still valid, use it and the other properties\n            if (userSession.tokenExpires.getTime() > Date.now()) {\n                opts.authentication = userSession;\n                if (state.portal) {\n                    opts.portal = state.portal;\n                }\n                if (state.currentUser) {\n                    opts.currentUser = state.currentUser;\n                }\n                if (state.properties) {\n                    opts.properties = state.properties;\n                }\n            }\n        }\n        else {\n            // if the session is expired, we can still carry forward the portalUrl\n            // we don't need this when auth is passed b/c it will use that instead\n            // of portalUrl\n            opts.portalUrl = state.portalUrl;\n        }\n        // system status is safe to carry forward even if session is expired\n        // TODO: Remove with Capabilities\n        opts.systemStatus = state.systemStatus;\n        opts.serviceStatus = state.serviceStatus;\n        return ArcGISContextManager.create(opts);\n    }\n    /**\n     * Set the Authentication (UserSession) for the context.\n     * This should be called when a user signs into a running\n     * application.\n     * @param auth\n     */\n    async setAuthentication(auth) {\n        this._authentication = auth;\n        this._portalUrl = auth.portal.replace(\"/sharing/rest\", \"\");\n        await this.initialize();\n    }\n    /**\n     * Set the properties hash and re-create the context\n     * @param properties\n     */\n    setProperties(properties) {\n        this._properties = properties;\n        this._context = new ArcGISContext(this.contextOpts);\n    }\n    /**\n     * Clear the Authentication (UserSession). This should be\n     * called when a user signs out of an application, but\n     * the application continues running\n     */\n    clearAuthentication() {\n        // Reset the portalUrl from the org url to the base url\n        // for ArcGIS Enterprise, we just leave the _portalUrl as-is\n        if (!this._context.isPortal) {\n            this._portalUrl = getPortalBaseFromOrgUrl(this._portalUrl);\n        }\n        // Clear the auth, portalSelf and currentUser props\n        this._authentication = null;\n        this._portalSelf = null;\n        this._currentUser = null;\n        this._context = new ArcGISContext(this.contextOpts);\n    }\n    /**\n     * Return a reference to the current state.\n     * When `.setAuthentication()` or `.clearAuthenentication()` are\n     * called, the state will be re-created. This is done so frameworks\n     * like React or Ember can detect changes.\n     */\n    get context() {\n        return this._context;\n    }\n    /**\n     * Serialize the context into a string that can be stored\n     * in a browser's local storage or server side session\n     *\n     * @returns encoded string representation of the context\n     */\n    serialize() {\n        const state = {\n            portalUrl: this._portalUrl,\n            // TODO: Remove with Capabilities\n            systemStatus: this._systemStatus,\n            serviceStatus: this._serviceStatus,\n        };\n        if (this._authentication) {\n            state.session = this._authentication.serialize();\n        }\n        if (this._portalSelf) {\n            state.portal = this._portalSelf;\n        }\n        if (this._currentUser) {\n            state.currentUser = this._currentUser;\n        }\n        if (this._properties) {\n            state.properties = this._properties;\n        }\n        return unicodeToBase64(JSON.stringify(state));\n    }\n    /**\n     * If we have a UserSession, fetch portal/self and\n     * store that along with current user\n     */\n    async initialize() {\n        // if we have auth, and don't have portalSelf or currentUser, fetch them\n        if (this._authentication && (!this._portalSelf || !this._currentUser)) {\n            Logger.debug(`ArcGISContextManager-${this.id}: Initializing`);\n            const username = this._authentication.username;\n            const requests = [\n                getSelf({ authentication: this._authentication }),\n                getUser({ username, authentication: this._authentication }),\n            ];\n            try {\n                const [portal, user] = await Promise.all(requests);\n                this._portalSelf = portal;\n                this._currentUser = user;\n                Logger.debug(`ArcGISContextManager-${this.id}: received portalSelf and currentUser`);\n            }\n            catch (ex) {\n                const msg = `ArcGISContextManager could not fetch portal & user for \"${this._authentication.username}\" using ${this._authentication.portal}.`;\n                Logger.error(msg);\n                // tslint:disable-next-line:no-console\n                console.error(msg);\n                throw ex;\n            }\n        }\n        // get system status\n        // TODO: Remove with Capabilities\n        if (!this._systemStatus) {\n            this._systemStatus = await getSystemStatus(this._portalUrl);\n        }\n        // get service status\n        if (!this._serviceStatus) {\n            this._serviceStatus = await getServiceStatus(this._portalUrl);\n        }\n        Logger.debug(`ArcGISContextManager-${this.id}: updating context`);\n        // update the context\n        this._context = new ArcGISContext(this.contextOpts);\n    }\n    /**\n     * Getter to streamline the creation of updated Context instances\n     */\n    get contextOpts() {\n        const contextOpts = {\n            id: this.id,\n            portalUrl: this._portalUrl,\n            hubUrl: this._hubUrl,\n            properties: this._properties,\n            // TODO: Remove with Capabilities\n            systemStatus: this._systemStatus,\n            serviceStatus: this._serviceStatus,\n        };\n        if (this._authentication) {\n            contextOpts.authentication = this._authentication;\n        }\n        if (this._portalSelf) {\n            contextOpts.portalSelf = this._portalSelf;\n        }\n        if (this._currentUser) {\n            contextOpts.currentUser = this._currentUser;\n        }\n        return contextOpts;\n    }\n}\n/**\n * Temporary fake implementation based on isPortal\n * which we have during the initialization\n * @param hubApiUrl\n */\nfunction getSystemStatus(portalUrl) {\n    let status = HUB_STATUS;\n    const isPortal = portalUrl.indexOf(\"arcgis.com\") === -1;\n    // When we move to fetching the system status from the API\n    // we can use\n    // const hubApiUrl = getHubApiFromPortalUrl(portalUrl);\n    if (isPortal) {\n        status = ENTERPRISE_SITES_STATUS;\n    }\n    return Promise.resolve(status);\n}\nconst ENTERPRISE_SITES_STATUS = {\n    content: \"online\",\n    discussions: \"not-available\",\n    events: \"not-available\",\n    initiatives: \"not-available\",\n    items: \"online\",\n    metrics: \"not-available\",\n    notifications: \"not-available\",\n    pages: \"online\",\n    projects: \"not-available\",\n    search: \"online\",\n    sites: \"online\",\n    groups: \"online\",\n    platform: \"online\",\n};\nconst HUB_STATUS = {\n    content: \"online\",\n    discussions: \"online\",\n    events: \"online\",\n    initiatives: \"online\",\n    items: \"online\",\n    metrics: \"online\",\n    notifications: \"online\",\n    pages: \"online\",\n    projects: \"online\",\n    search: \"online\",\n    sites: \"online\",\n    groups: \"online\",\n    platform: \"online\",\n};\nfunction getServiceStatus(portalUrl) {\n    let status = HUB_SERVICE_STATUS;\n    const isPortal = portalUrl.indexOf(\"arcgis.com\") === -1;\n    // When we move to fetching the system status from the API\n    // we can use\n    // const hubApiUrl = getHubApiFromPortalUrl(portalUrl);\n    if (isPortal) {\n        status = ENTERPRISE_SITES_SERVICE_STATUS;\n    }\n    return Promise.resolve(status);\n}\nconst HUB_SERVICE_STATUS = {\n    portal: \"online\",\n    discussions: \"online\",\n    events: \"online\",\n    metrics: \"online\",\n    notifications: \"online\",\n    \"hub-search\": \"online\",\n    domains: \"online\",\n};\nconst ENTERPRISE_SITES_SERVICE_STATUS = {\n    portal: \"online\",\n    discussions: \"not-available\",\n    events: \"not-available\",\n    metrics: \"not-available\",\n    notifications: \"not-available\",\n    \"hub-search\": \"not-available\",\n    domains: \"not-available\",\n};\n//# sourceMappingURL=ArcGISContextManager.js.map",":host {\n  display: block;\n}\n.wrapper {\n  display: flex;\n}\n.wrapper > div {\n  align-self: center;\n  margin-right: 10px;\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, h } from '@stencil/core';\nimport state from '../../util/state';\nimport { UserSession } from '@esri/arcgis-rest-auth';\nimport { ArcGISContextManager } from '@esri/hub-common';\n\n@Component({\n  tag: 'arcgis-hub-identity',\n  styleUrl: 'arcgis-hub-identity.css',\n  shadow: true,\n})\nexport class ArcgisHubIdentity {\n  @Prop({ mutable: true }) clientId: string = null;\n  @Prop({ mutable: true }) redirect: string = null;\n  @Prop({ mutable: true }) portalUrl: string = 'https://www.arcgis.com';\n  @Prop({ mutable: true }) user: any = null;\n  @Prop({ mutable: false }) origin: string = null;\n\n  // @ts-ignore\n  identityEl: HTMLArcgisAppIdentityElement;\n\n  async componentWillLoad() {\n    // the redirect may be set after loading based on deploy host\n    state.app = {\n      client: this.clientId,\n      redirect: this.redirect,\n      portal: this.portalUrl,\n    };\n    if (!!this.origin) {\n      const session = await UserSession.fromParent(this.origin);\n      // session is a UserSession instance, populated from the parent app\n      // create a Hub context and store for use in other components with auth\n      try {\n        const ctxMgr = await ArcGISContextManager.create({ authentication: session });\n        state.context = ctxMgr.context;\n        this.arcgisHubIdentitySignedIn.emit(state.context);\n      } catch (err) {\n        console.debug('arcgis-hub-identity: Embedded session not found', err);\n      }\n\n      // })\n      // .catch((_ex) => {\n      //   // The only case it will reject is if the parent is unable to return a credential\n      //   // if the parent does not see the child as a valid origin, the parent will never respond.\n      //   console.debug(\"arcgis-hub-identity: Embedded session not found\", _ex);\n\n      // });\n    }\n  }\n  /**\n   * reference to sign-in button for onclick events\n   */\n  signinButton: HTMLButtonElement;\n\n  signinClick() {\n    const evt = new CustomEvent('arcgisAppIdentityStartSignIn');\n    document.dispatchEvent(evt);\n  }\n  signoutClick() {\n    const evt = new CustomEvent('arcgisAppIdentityStartSignOut');\n    document.dispatchEvent(evt);\n  }\n\n  @Event() arcgisHubIdentitySignedIn: EventEmitter;\n\n  @Listen('arcgisAppIdentitySignedIn')\n  signedinEvent(evt) {\n\n    const tokenExpires = state?.context?._authentication?._tokenExpires;\n    const now = new Date();\n    if (tokenExpires < now) {\n      const evt = new CustomEvent('arcgisAppIdentityStartSignOut');\n      document.dispatchEvent(evt);\n    } else {\n      state.context = evt.detail;\n      console.debug('arcgis-hub-identity: arcgisAppIdentitySignedIn');\n\n      this.arcgisHubIdentitySignedIn.emit(evt.detail);\n    }\n  }\n  @Listen('arcgisAppIdentitySignedOut')\n  signedoutEvent(_evt) {\n    state.context = null;\n  }\n\n  render() {\n    return (\n      <Host>\n        <span id=\"profile\">\n          <arcgis-app-identity ref={el => (this.identityEl = el)} client-id={state.app.client} redirect-uri={state.app.redirect} portal={state.app.portal}>\n            <slot></slot>\n          </arcgis-app-identity>\n\n          {this.renderIdentity()}\n        </span>\n      </Host>\n    );\n  }\n\n  renderIdentity() {\n    if (!!state.user) {\n      // return `Welcome ${state.user?.fullName}`\n      return state.user?.fullName;\n      // return (\n      //   <calcite-dropdown>\n      //     <calcite-button slot=\"dropdown-trigger\">{state.user?.fullName}</calcite-button>\n      //     <calcite-dropdown-group>\n      //       <calcite-dropdown-item\n      //         onclick={this.signoutClick}\n      //       >Sign Out</calcite-dropdown-item>\n      //     </calcite-dropdown-group>\n      //   </calcite-dropdown>\n      // )\n    } else {\n      return [\n        <div class=\"wrapper\">\n          <div>Sign in:</div>\n          <calcite-button ref={el => (this.signinButton = el)} onClick={this.signinClick}>\n            Sign In\n          </calcite-button>\n        </div>,\n      ];\n    }\n  }\n}\n"],"mappings":"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"}