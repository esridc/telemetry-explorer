import{d as t,r as i,h as s,H as n,a as e}from"./p-ce275af6.js";import{a as c,t as o}from"./p-e4f14b9d.js";import{c as a}from"./p-118f21c7.js";import"./p-2f33ceac.js";import"./p-3a41f8f2.js";
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.10.1
 */const l={icon:"icon",flipRtl:"flip-rtl"};
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.10.1
 */const r={};const h={};const f={s:16,m:24,l:32};function p({icon:t,scale:i}){const s=f[i];const n=m(t);const e=n.charAt(n.length-1)==="F";const c=e?n.substring(0,n.length-1):n;return`${c}${s}${e?"F":""}`}async function u(i){const s=p(i);const n=b(s);if(n){return n}if(!h[s]){h[s]=fetch(t(`./assets/icon/${s}.json`)).then((t=>t.json())).catch((()=>{console.error(`"${s}" is not a valid calcite-ui-icon name`);return""}))}const e=await h[s];r[s]=e;return e}function d(t){return b(p(t))}function b(t){return r[t]}function m(t){const i=!isNaN(Number(t.charAt(0)));const s=t.split("-");const n=s.length>0;if(n){const i=/[a-z]/i;t=s.map(((t,s)=>t.replace(i,(function t(i,n){const e=s===0&&n===0;if(e){return i}return i.toUpperCase()})))).join("")}return i?`i${t}`:t}const x=":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}";const z=class{constructor(t){i(this,t);this.icon=null;this.flipRtl=false;this.scale="m";this.textLabel=undefined;this.pathData=undefined;this.visible=false}connectedCallback(){if(!this.visible){this.waitUntilVisible((()=>{this.visible=true;this.loadIconPathData()}))}}disconnectedCallback(){var t;(t=this.intersectionObserver)===null||t===void 0?void 0:t.disconnect();this.intersectionObserver=null}render(){const{el:t,flipRtl:i,pathData:e,scale:a,textLabel:r}=this;const h=c(t);const p=f[a];const u=!!r;const d=[].concat(e||"");return s(n,{key:"c96ce47b404bd4f75deb2261a37963679b818452","aria-hidden":o(!u),"aria-label":u?r:null,role:u?"img":null},s("svg",{key:"614da909e3822ade4a056af0180bb21e9eba9ad2","aria-hidden":"true",class:{[l.flipRtl]:h==="rtl"&&i,svg:true},fill:"currentColor",height:"100%",viewBox:`0 0 ${p} ${p}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},d.map((t=>typeof t==="string"?s("path",{d:t}):s("path",{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:i,visible:s}=this;if(!t||!s){return}const n={icon:t,scale:i};const e=d(n)||await u(n);if(t!==this.icon){return}this.pathData=e}waitUntilVisible(t){this.intersectionObserver=a("intersection",(i=>{i.forEach((i=>{if(i.isIntersecting){this.intersectionObserver.disconnect();this.intersectionObserver=null;t()}}))}),{rootMargin:"50px"});if(!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return e(this)}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}};z.style=x;export{z as calcite_icon};
//# sourceMappingURL=p-545c3500.entry.js.map