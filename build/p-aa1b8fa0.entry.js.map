{"version":3,"names":["autoMode","darkMode","customConfig","globalThis","version","stampVersion","console","warn","target","Object","defineProperty","value","writable","initModeChangeEvent","classList","document","body","prefersDark","window","matchMedia","matches","getMode","contains","emitModeChange","mode","dispatchEvent","CustomEvent","bubbles","detail","modeChangeHandler","newMode","currentMode","addEventListener","event","MutationObserver","observe","attributes","attributeFilter","appGlobalScript","isBrowser","location","readyState","once","globalScripts","telemetryDashboardCss","TelemetryDashboard","this","cardId","updateCardConfiguration","debug","updatedCardId","updatedConfiguration","configuration","cardEls","render","h","Host","id","name","ref","el"],"sources":["./node_modules/@esri/calcite-components/dist/components/resources.js","./node_modules/@esri/calcite-components/dist/components/config.js","./node_modules/@esri/calcite-components/dist/components/index.js","./src/components/telemetry-dashboard/telemetry-dashboard.css?tag=telemetry-dashboard&encapsulation=shadow","./src/components/telemetry-dashboard/telemetry-dashboard.tsx"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\nconst autoMode = \"calcite-mode-auto\";\nconst darkMode = \"calcite-mode-dark\";\nconst lightMode = \"calcite-mode-light\";\nconst CSS_UTILITY = {\n    autoMode,\n    darkMode,\n    lightMode,\n    rtl: \"calcite--rtl\",\n    calciteAnimate: \"calcite-animate\",\n    calciteAnimateIn: \"calcite-animate__in\",\n    calciteAnimateInUp: \"calcite-animate__in-up\",\n    calciteAnimateInDown: \"calcite-animate__in-down\",\n    calciteAnimateInRight: \"calcite-animate__in-right\",\n    calciteAnimateInLeft: \"calcite-animate__in-left\",\n    calciteAnimateInScale: \"calcite-animate__in-scale\",\n};\n\nexport { CSS_UTILITY as C, autoMode as a, darkMode as d };\n\n//# sourceMappingURL=resources.js.map","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\n/**\n * This module allows custom configuration for components.\n */\nconst customConfig = globalThis[\"calciteConfig\"];\nconst focusTrapStack = customConfig?.focusTrapStack || [];\nconst version = \"2.10.1\"; // version number is set by build\n/**\n * Stamp the version onto the global config.\n */\nfunction stampVersion() {\n    if (customConfig && customConfig.version) {\n        console.warn(`[calcite-components] while initializing v${version}, an existing configuration with version \"${customConfig.version}\" was found. This may cause unexpected behavior. The version will not be added to the existing global configuration.`);\n        return;\n    }\n    const target = customConfig || globalThis[\"calciteConfig\"] || {};\n    Object.defineProperty(target, \"version\", {\n        value: version,\n        writable: false,\n    });\n    globalThis[\"calciteConfig\"] = target;\n}\n\nexport { focusTrapStack as f, stampVersion as s };\n\n//# sourceMappingURL=config.js.map","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\nimport { d as darkMode, a as autoMode } from './resources.js';\nimport { s as stampVersion } from './config.js';\nexport { getAssetPath, setAssetPath, setNonce, setPlatformOptions } from '@stencil/core/internal/client/index.js';\n\n/**\n * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.\n */\nfunction initModeChangeEvent() {\n    const { classList } = document.body;\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? \"dark\" : \"light\";\n    const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent(\"calciteModeChange\", { bubbles: true, detail: { mode } }));\n    const modeChangeHandler = (newMode) => {\n        currentMode !== newMode && emitModeChange(newMode);\n        currentMode = newMode;\n    };\n    let currentMode = getMode();\n    // emits event on page load\n    emitModeChange(currentMode);\n    // emits event when changing OS mode preferences\n    window\n        .matchMedia(\"(prefers-color-scheme: dark)\")\n        .addEventListener(\"change\", (event) => modeChangeHandler(event.matches ? \"dark\" : \"light\"));\n    // emits event when toggling between mode classes on <body>\n    new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {\n        attributes: true,\n        attributeFilter: [\"class\"],\n    });\n}\n\n/**\n * This file is imported in Stencil's `globalScript` config option.\n *\n * @see {@link https://stenciljs.com/docs/config#globalscript}\n */\nfunction appGlobalScript () {\n    const isBrowser = typeof window !== \"undefined\" &&\n        typeof location !== \"undefined\" &&\n        typeof document !== \"undefined\" &&\n        window.location === location &&\n        window.document === document;\n    if (isBrowser) {\n        if (document.readyState === \"interactive\") {\n            initModeChangeEvent();\n        }\n        else {\n            document.addEventListener(\"DOMContentLoaded\", () => initModeChangeEvent(), { once: true });\n        }\n    }\n    stampVersion();\n}\n\nconst globalScripts = appGlobalScript;\n\nglobalScripts();\n\n//# sourceMappingURL=index.js.map",":host {\n  display: block;\n}\n\n#dashboard {\n  display: grid;\n  grid-template-areas:\n    \"header header\"\n    \"sidebar canvas\";\n  grid-template-rows: auto 1fr;\n  grid-template-columns: auto 1fr;\n}\n\n#header {\n  grid-area: header;\n  padding: 0 2rem;\n  background-color: black;\n  color: white;\n}\n\n#sidebar {\n  grid-area: sidebar;\n}\n\n#canvas {\n  grid-area: canvas;\n}","import { Component, Host, Listen, State, h } from '@stencil/core';\nimport { setAssetPath } from \"@esri/calcite-components/dist/components\";\n// setAssetPath(\"./assets\");\nsetAssetPath('https://js.arcgis.com/calcite-components/2.10.1/assets');\n\n@Component({\n  tag: 'telemetry-dashboard',\n  styleUrl: 'telemetry-dashboard.css',\n  shadow: true,\n})\nexport class TelemetryDashboard {\n\n  @State() cardEls: {} = {};\n\n  // prototype card id\n  private cardId = 'card1';\n\n  @Listen('telemetryConfigurationUpdated')\n  updateCardConfiguration(event: CustomEvent) {\n    console.debug('telemetryConfigurationUpdated', event.detail);\n    const updatedCardId = event.detail.cardId;\n    const updatedConfiguration = event.detail.configuration;\n\n    console.debug('Updated card id:', updatedCardId, this.cardEls, updatedConfiguration);\n    // Get the card by id\n    this.cardEls[updatedCardId].configuration = updatedConfiguration;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div id=\"dashboard\">\n          <div id=\"header\">\n            <slot name='header'></slot>\n          </div>\n          <div id=\"sidebar\">\n            <telemetry-card-editor\n              cardId={this.cardId}\n            ></telemetry-card-editor>\n          </div>\n          <div id=\"canvas\">\n            <telemetry-card\n              cardId={this.cardId}\n              ref={el => (this.cardEls[this.cardId] = el)}\n            ></telemetry-card>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":";;;;;GAKA,MAAMA,EAAW,oBACjB,MAAMC,EAAW;;;;;GCEjB,MAAMC,EAAeC,WAAW,iBAEhC,MAAMC,EAAU,SAIhB,SAASC,IACL,GAAIH,GAAgBA,EAAaE,QAAS,CACtCE,QAAQC,KAAK,4CAA4CH,8CAAoDF,EAAaE,+HAC1H,MACR,CACI,MAAMI,EAASN,GAAgBC,WAAW,kBAAoB,GAC9DM,OAAOC,eAAeF,EAAQ,UAAW,CACrCG,MAAOP,EACPQ,SAAU,QAEdT,WAAW,iBAAmBK,CAClC;;;;;GCbA,SAASK,IACL,MAAMC,UAAEA,GAAcC,SAASC,KAC/B,MAAMC,EAAcC,OAAOC,WAAW,gCAAgCC,QACtE,MAAMC,EAAU,IAAMP,EAAUQ,SAASrB,IAAca,EAAUQ,SAAStB,IAAaiB,EAAe,OAAS,QAC/G,MAAMM,EAAkBC,GAAST,SAASC,KAAKS,cAAc,IAAIC,YAAY,oBAAqB,CAAEC,QAAS,KAAMC,OAAQ,CAAEJ,WAC7H,MAAMK,EAAqBC,IACvBC,IAAgBD,GAAWP,EAAeO,GAC1CC,EAAcD,CAAO,EAEzB,IAAIC,EAAcV,IAElBE,EAAeQ,GAEfb,OACKC,WAAW,gCACXa,iBAAiB,UAAWC,GAAUJ,EAAkBI,EAAMb,QAAU,OAAS,WAEtF,IAAIc,kBAAiB,IAAML,EAAkBR,OAAYc,QAAQpB,SAASC,KAAM,CAC5EoB,WAAY,KACZC,gBAAiB,CAAC,UAE1B,CAOA,SAASC,IACL,MAAMC,SAAmBrB,SAAW,oBACzBsB,WAAa,oBACbzB,WAAa,aACpBG,OAAOsB,WAAaA,UACpBtB,OAAOH,WAAaA,SACxB,GAAIwB,EAAW,CACX,GAAIxB,SAAS0B,aAAe,cAAe,CACvC5B,GACZ,KACa,CACDE,SAASiB,iBAAiB,oBAAoB,IAAMnB,KAAuB,CAAE6B,KAAM,MAC/F,CACA,CACIrC,GACJ,CAEA,MAAMsC,EAAgBL,EAEtBK,IC3DA,MAAMC,EAAwB,mS,MCUjBC,EAAkB,M,yBAKrBC,KAAAC,OAAS,Q,aAHM,E,CAMvBC,wBAAwBf,GACtB3B,QAAQ2C,MAAM,gCAAiChB,EAAML,QACrD,MAAMsB,EAAgBjB,EAAML,OAAOmB,OACnC,MAAMI,EAAuBlB,EAAML,OAAOwB,cAE1C9C,QAAQ2C,MAAM,mBAAoBC,EAAeJ,KAAKO,QAASF,GAE/DL,KAAKO,QAAQH,GAAeE,cAAgBD,C,CAG9CG,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,GAAG,aACNF,EAAA,OAAKE,GAAG,UACNF,EAAA,QAAMG,KAAK,YAEbH,EAAA,OAAKE,GAAG,WACNF,EAAA,yBACER,OAAQD,KAAKC,UAGjBQ,EAAA,OAAKE,GAAG,UACNF,EAAA,kBACER,OAAQD,KAAKC,OACbY,IAAKC,GAAOd,KAAKO,QAAQP,KAAKC,QAAUa,M"}