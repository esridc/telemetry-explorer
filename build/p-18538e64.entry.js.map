{"version":3,"names":["telemetryCardCss","telemetryApiUrl","TelemetryCard","async","configuration","response","fetch","method","body","JSON","stringify","headers","Authorization","state","context","hubRequestOptions","authentication","token","data","parse","text","newConfiguration","this","fetchTelemetry","console","debug","error","render","h","Host","slot","cardId","_a","renderTable","rows","heading","description","dimensions","length","push","metrics","row","cells","caption","telemetryCardEditorCss","TelemetryCardEditor","schema","type","required","properties","hostname","maxLength","default","startDate","endDate","enum","timeDimension","orderByName","orderByDirection","uiSchema","elements","label","scope","options","control","labels","convertConfiguration","dateRange","orderBy","name","direction","event","detail","values","telemetryConfigurationUpdated","emit"],"sources":["./src/components/telemetry-card/telemetry-card.css?tag=telemetry-card&encapsulation=shadow","./src/components/telemetry-card/telemetry-card.tsx","./src/components/telemetry-card-editor/telemetry-card-editor.css?tag=telemetry-card-editor&encapsulation=shadow","./src/components/telemetry-card-editor/telemetry-card-editor.tsx"],"sourcesContent":[":host {\n  display: block;\n  width: 100%;\n}\n","import { Component, Host, Prop, Watch, h } from '@stencil/core';\nimport state from '../../util/state';\nconst telemetryApiUrl = \"https://hub.arcgis.com/api/telemetry/v1/report\";\n\n@Component({\n  tag: 'telemetry-card',\n  styleUrl: 'telemetry-card.css',\n  shadow: true,\n})\nexport class TelemetryCard {\n\n  /**\n   * Unique card identifier for binding configuration\n   */\n  @Prop() cardId: string = null;\n\n  /**\n   * Card configuration using Telemetry configuration schema\n   */\n  @Prop() configuration: any;\n\n  /**\n   * Data returned from Telemetry API\n   */\n  @Prop({ mutable: true, reflect: true }) data: any;\n\n  private async fetchTelemetry(configuration) {\n    const response = await fetch(telemetryApiUrl, {\n      method: 'POST',\n      body: JSON.stringify(configuration),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': state.context.hubRequestOptions.authentication.token\n      }\n    })\n    const data = JSON.parse(await response.text());\n    return data;\n  }\n\n  @Watch('configuration')\n  async updateTelemetryData(newConfiguration) {\n    if (!!this.configuration) {\n      try {\n        this.data = await this.fetchTelemetry(newConfiguration);\n        console.debug('Telemetry Data:', this.data);\n      } catch (error) {\n        console.error('Error fetching telemetry data:', error);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <calcite-card>\n          <h2 slot=\"title\">Card {this.cardId}</h2>\n          \n          {!!this.configuration &&  !!this.data?.data && this.renderTable(this.data)}\n          <code>\n            {!!this.configuration ? JSON.stringify(this.configuration, null, 2) : 'No configuration'}\n          </code>\n        </calcite-card>\n      </Host>\n    );\n  }\n\n  renderTable(data) {\n    const rows =  [];\n    // header row\n    const headers = [<calcite-table-header \n      heading=\"Timestamp\" \n      description=\"\"\n    ></calcite-table-header>]\n    if (!!this.configuration.dimensions && this.configuration.dimensions.length > 0) {\n      headers.push(<calcite-table-header \n        heading=\"Dimension\" \n        description={this.configuration.dimensions[0]}\n      ></calcite-table-header>)\n    }\n    if (!!this.configuration.metrics && this.configuration.metrics.length > 0) {\n      headers.push(<calcite-table-header \n        heading=\"Metric\" \n        description={this.configuration.metrics[0]}\n      ></calcite-table-header>)\n    }\n\n    rows.push(<calcite-table-row slot=\"table-header\">{headers}</calcite-table-row>)\n    for (const row of data?.data) {\n      const cells = [\n        <calcite-table-cell>{row['timestamp']}</calcite-table-cell>\n      ]\n      if (!!this.configuration.dimensions && this.configuration.dimensions.length > 0) {\n        cells.push(<calcite-table-cell>{row[this.configuration.dimensions[0]]}</calcite-table-cell>)\n      }\n      if (!!this.configuration.metrics && this.configuration.metrics.length > 0) {\n        cells.push(<calcite-table-cell>{row[this.configuration.metrics[0]]}</calcite-table-cell>)\n      }\n      rows.push(<calcite-table-row>{cells}</calcite-table-row>);\n    }\n    // <calcite-table-row>\n    //     <calcite-table-cell>cell content</calcite-table-cell>\n    //     <calcite-table-cell>cell content</calcite-table-cell>\n    //     <calcite-table-cell>cell content</calcite-table-cell>\n    //     <calcite-table-cell alignment=\"end\">cell content</calcite-table-cell>\n    // </calcite-table-row>\n\n    return (\n      <calcite-table caption=\"Simple table\">\n        {rows}\n      </calcite-table>\n    )\n\n  }\n\n}\n",":host {\n  display: block;\n  width: 400px;\n  border: 1px solid gray;\n  padding: 2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'telemetry-card-editor',\n  styleUrl: 'telemetry-card-editor.css',\n  shadow: true,\n})\nexport class TelemetryCardEditor {\n\n  /**\n   * Unique Card ID - used in events to know which card's configuration has been updated\n   */\n  @Prop() cardId: string = null;\n\n  /**\n   * Configuration object for the card\n   */\n  @Prop({ mutable: true, reflect: true }) configuration: any = {};\n\n  // private configurationEl: any;\n\n  // see Telemetry API reference https://confluencewikidev.esri.com/display/Hub/Telemetry+API+Reference\n  private schema = {\n    type: 'object',\n    required: ['hostname'],\n    properties: {\n      hostname: {\n        type: 'string',\n        maxLength: 255,\n        default: 'dc.esri.com'\n      },\n      startDate: {\n        type: 'string',\n        default: \"2024-07-01\"\n      },\n      endDate: {\n        type: 'string',\n        default: \"2024-08-01\"\n      },      \n      metrics: {\n        type: 'string',\n        enum: ['page-views:count', \"other-events:count\"],\n        default: 'page-views:count'\n      },\n      dimensions: {\n        type: 'string',\n        enum: ['', 'contentId', 'dimension2'],\n        default: ''\n      },\n      timeDimension: {\n        type: 'string',\n        enum: [\"hour\", \"day\", \"week\", \"month\"],\n        default: \"day\",\n      },\n      orderByName: {\n            type: 'string',\n            enum: [\"day\", \"page-views:count\", \"other-events:count\"],\n            default: \"day\"\n          },\n          orderByDirection: {\n            type: 'string',\n            enum: [\"asc\", \"desc\"],\n            default: \"asc\"\n          }\n        \n      }\n    }\n  \n  // see https://friendly-adventure-7w1eyl2.pages.github.io/harnesses/html/arcgis-configuration-editor/configuration-editor-fields.html\n  private uiSchema = {\n    \"type\": \"Layout\",\n    \"elements\": [\n      {\n        \"label\": \"Hostname\",\n        \"scope\": \"/properties/hostname\",\n        \"type\": \"Control\",\n        \"options\": {}\n      },{\n        \"label\": \"Start Date\",\n        \"scope\": \"/properties/startDate\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-date\"\n        }\n      },{\n        \"label\": \"End Date\",\n        \"scope\": \"/properties/endDate\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-date\"\n        }\n      },{\n        \"label\": \"Metrics\",\n        \"scope\": \"/properties/metrics\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-radio-group\",\n        }\n      },{\n        \"label\": \"Dimensions\",\n        \"scope\": \"/properties/dimensions\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-radio-group\",\n          \"labels\": [\n            \"None\",\n            \"Content ID\",\n            \"User Type\"\n          ]\n        }\n      },{\n        \"label\": \"timeDimension\",\n        \"scope\": \"/properties/timeDimension\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-radio-group\",\n        }\n      },{\n        \"label\": \"Order by Name\",\n        \"scope\": \"/properties/orderByName\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-radio-group\",\n        }\n      },{\n        \"label\": \"Order by Direction\",\n        \"scope\": \"/properties/orderByDirection\",\n        \"type\": \"Control\",\n        \"options\": {\n          \"control\": \"hub-field-input-radio-group\",\n          \"labels\": [\n            \"Ascending\",\n            \"Descending\"\n          ]\n        }\n      }\n    ]\n  }\n\n  private convertConfiguration(configuration) {\n    const newConfiguration:any = {\n      scope: {\n        hostname: configuration.hostname\n      },\n      dateRange: {\n        startDate: configuration.startDate,\n        endDate: configuration.endDate\n      },\n      metrics: [configuration.metrics],\n      timeDimension: configuration.timeDimension,\n      orderBy: [{\n        name: configuration.orderByName,\n        direction: configuration.orderByDirection\n      }]\n    }\n    if(!!configuration.dimensions && configuration.dimensions.length > 0) {\n      newConfiguration.dimensions = [configuration.dimensions]\n    }\n    return newConfiguration;\n\n  }\n\n  @Event() telemetryConfigurationUpdated: EventEmitter<any>;\n\n  @Listen('arcgisConfigurationEditorChange')\n  async configurationChanged(event) {\n    // const newConfiguration = await this.configurationEl.values;\n    const newConfiguration = this.convertConfiguration(event.detail.values);\n    \n    console.debug('telemetry-card-editor: updateConfiguration', newConfiguration);\n    // this.saveConfiguration();\n    this.telemetryConfigurationUpdated.emit({\n      cardId: this.cardId,\n      configuration: newConfiguration\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n\n          <h3 slot=\"title\">Card Editor</h3>\n          <div slot=\"content\">\n            <arcgis-configuration-editor\n              schema={this.schema}\n              uiSchema={this.uiSchema}\n              values={this.configuration}\n              // ref={el => (this.configurationEl = el)}\n            ></arcgis-configuration-editor>\n          </div>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":"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"}